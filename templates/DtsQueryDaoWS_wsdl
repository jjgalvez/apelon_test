<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.2-b13 (branches/2.2-6964; 2012-01-09T18:04:18+0000) JAXWS-RI/2.2.6-promoted-b20 JAXWS/2.2 svn-revision#unknown. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.2-b13 (branches/2.2-6964; 2012-01-09T18:04:18+0000) JAXWS-RI/2.2.6-promoted-b20 JAXWS/2.2 svn-revision#unknown. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://apelon.com/dtsserver/ws/dtsquery" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://apelon.com/dtsserver/ws/dtsquery" name="DtsQueryDaoService">
<types>
<xsd:schema>
<xsd:import namespace="http://jaxb.dev.java.net/array" schemaLocation="http://localhost:5000/soap/DtsQueryDaoWS?xsd=1"/>
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://apelon.com/dtsserver/ws/dtsquery" schemaLocation="http://localhost:5000/soap/DtsQueryDaoWS?xsd=2"/>
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://apelon.com/dtsserver/types" schemaLocation="http://localhost:5000/soap/DtsQueryDaoWS?xsd=3"/>
</xsd:schema>
</types>
<message name="getVersion">
<part name="parameters" element="tns:getVersion"/>
</message>
<message name="getVersionResponse">
<part name="parameters" element="tns:getVersionResponse"/>
</message>
<message name="getClassifierStatus">
<part name="parameters" element="tns:getClassifierStatus"/>
</message>
<message name="getClassifierStatusResponse">
<part name="parameters" element="tns:getClassifierStatusResponse"/>
</message>
<message name="getClassifierHistory">
<part name="parameters" element="tns:getClassifierHistory"/>
</message>
<message name="getClassifierHistoryResponse">
<part name="parameters" element="tns:getClassifierHistoryResponse"/>
</message>
<message name="fetchConceptHistory">
<part name="parameters" element="tns:fetchConceptHistory"/>
</message>
<message name="fetchConceptHistoryResponse">
<part name="parameters" element="tns:fetchConceptHistoryResponse"/>
</message>
<message name="getRoleTypes">
<part name="parameters" element="tns:getRoleTypes"/>
</message>
<message name="getRoleTypesResponse">
<part name="parameters" element="tns:getRoleTypesResponse"/>
</message>
<message name="getAssociationTypes">
<part name="parameters" element="tns:getAssociationTypes"/>
</message>
<message name="getAssociationTypesResponse">
<part name="parameters" element="tns:getAssociationTypesResponse"/>
</message>
<message name="getSynonymTypes">
<part name="parameters" element="tns:getSynonymTypes"/>
</message>
<message name="getSynonymTypesResponse">
<part name="parameters" element="tns:getSynonymTypesResponse"/>
</message>
<message name="classify">
<part name="parameters" element="tns:classify"/>
</message>
<message name="classifyResponse">
<part name="parameters" element="tns:classifyResponse"/>
</message>
<message name="fetchAuthorityByName">
<part name="parameters" element="tns:fetchAuthorityByName"/>
</message>
<message name="fetchAuthorityByNameResponse">
<part name="parameters" element="tns:fetchAuthorityByNameResponse"/>
</message>
<message name="fetchAuthorityById">
<part name="parameters" element="tns:fetchAuthorityById"/>
</message>
<message name="fetchAuthorityByIdResponse">
<part name="parameters" element="tns:fetchAuthorityByIdResponse"/>
</message>
<message name="getAllPropertyTypesOfAuthority">
<part name="parameters" element="tns:getAllPropertyTypesOfAuthority"/>
</message>
<message name="getAllPropertyTypesOfAuthorityResponse">
<part name="parameters" element="tns:getAllPropertyTypesOfAuthorityResponse"/>
</message>
<message name="getAuthorities">
<part name="parameters" element="tns:getAuthorities"/>
</message>
<message name="getAuthoritiesResponse">
<part name="parameters" element="tns:getAuthoritiesResponse"/>
</message>
<message name="updateAuthority">
<part name="parameters" element="tns:updateAuthority"/>
</message>
<message name="updateAuthorityResponse">
<part name="parameters" element="tns:updateAuthorityResponse"/>
</message>
<message name="deleteAuthorityByName">
<part name="parameters" element="tns:deleteAuthorityByName"/>
</message>
<message name="deleteAuthorityByNameResponse">
<part name="parameters" element="tns:deleteAuthorityByNameResponse"/>
</message>
<message name="deleteAuthorityById">
<part name="parameters" element="tns:deleteAuthorityById"/>
</message>
<message name="deleteAuthorityByIdResponse">
<part name="parameters" element="tns:deleteAuthorityByIdResponse"/>
</message>
<message name="addAuthorityProperty">
<part name="parameters" element="tns:addAuthorityProperty"/>
</message>
<message name="addAuthorityPropertyResponse">
<part name="parameters" element="tns:addAuthorityPropertyResponse"/>
</message>
<message name="updateAuthorityProperty">
<part name="parameters" element="tns:updateAuthorityProperty"/>
</message>
<message name="updateAuthorityPropertyResponse">
<part name="parameters" element="tns:updateAuthorityPropertyResponse"/>
</message>
<message name="deleteAuthorityProperty">
<part name="parameters" element="tns:deleteAuthorityProperty"/>
</message>
<message name="deleteAuthorityPropertyResponse">
<part name="parameters" element="tns:deleteAuthorityPropertyResponse"/>
</message>
<message name="findNamespaceByName">
<part name="parameters" element="tns:findNamespaceByName"/>
</message>
<message name="findNamespaceByNameResponse">
<part name="parameters" element="tns:findNamespaceByNameResponse"/>
</message>
<message name="findNamespaceById">
<part name="parameters" element="tns:findNamespaceById"/>
</message>
<message name="findNamespaceByIdResponse">
<part name="parameters" element="tns:findNamespaceByIdResponse"/>
</message>
<message name="findNamespaceByCode">
<part name="parameters" element="tns:findNamespaceByCode"/>
</message>
<message name="findNamespaceByCodeResponse">
<part name="parameters" element="tns:findNamespaceByCodeResponse"/>
</message>
<message name="getVersionByTime">
<part name="parameters" element="tns:getVersionByTime"/>
</message>
<message name="getVersionByTimeResponse">
<part name="parameters" element="tns:getVersionByTimeResponse"/>
</message>
<message name="fetchVersionByName">
<part name="parameters" element="tns:fetchVersionByName"/>
</message>
<message name="fetchVersionByNameResponse">
<part name="parameters" element="tns:fetchVersionByNameResponse"/>
</message>
<message name="fetchVersionById">
<part name="parameters" element="tns:fetchVersionById"/>
</message>
<message name="fetchVersionByIdResponse">
<part name="parameters" element="tns:fetchVersionByIdResponse"/>
</message>
<message name="getExtendingNamespaces">
<part name="parameters" element="tns:getExtendingNamespaces"/>
</message>
<message name="getExtendingNamespacesResponse">
<part name="parameters" element="tns:getExtendingNamespacesResponse"/>
</message>
<message name="deleteNamespaceByCode">
<part name="parameters" element="tns:deleteNamespaceByCode"/>
</message>
<message name="deleteNamespaceByCodeResponse">
<part name="parameters" element="tns:deleteNamespaceByCodeResponse"/>
</message>
<message name="addRootConcept">
<part name="parameters" element="tns:addRootConcept"/>
</message>
<message name="addRootConceptResponse">
<part name="parameters" element="tns:addRootConceptResponse"/>
</message>
<message name="deleteRootConcept">
<part name="parameters" element="tns:deleteRootConcept"/>
</message>
<message name="deleteRootConceptResponse">
<part name="parameters" element="tns:deleteRootConceptResponse"/>
</message>
<message name="getConceptAssociationTypes">
<part name="parameters" element="tns:getConceptAssociationTypes"/>
</message>
<message name="getConceptAssociationTypesResponse">
<part name="parameters" element="tns:getConceptAssociationTypesResponse"/>
</message>
<message name="getTermAssociationTypes">
<part name="parameters" element="tns:getTermAssociationTypes"/>
</message>
<message name="getTermAssociationTypesResponse">
<part name="parameters" element="tns:getTermAssociationTypesResponse"/>
</message>
<message name="findAssociationTypeByName">
<part name="parameters" element="tns:findAssociationTypeByName"/>
</message>
<message name="findAssociationTypeByNameResponse">
<part name="parameters" element="tns:findAssociationTypeByNameResponse"/>
</message>
<message name="findAssociationTypeById">
<part name="parameters" element="tns:findAssociationTypeById"/>
</message>
<message name="findAssociationTypeByIdResponse">
<part name="parameters" element="tns:findAssociationTypeByIdResponse"/>
</message>
<message name="isAssociationTypeUsed">
<part name="parameters" element="tns:isAssociationTypeUsed"/>
</message>
<message name="isAssociationTypeUsedResponse">
<part name="parameters" element="tns:isAssociationTypeUsedResponse"/>
</message>
<message name="addAssociationType">
<part name="parameters" element="tns:addAssociationType"/>
</message>
<message name="addAssociationTypeResponse">
<part name="parameters" element="tns:addAssociationTypeResponse"/>
</message>
<message name="updateAssociationType">
<part name="parameters" element="tns:updateAssociationType"/>
</message>
<message name="updateAssociationTypeResponse">
<part name="parameters" element="tns:updateAssociationTypeResponse"/>
</message>
<message name="deleteAssociationType">
<part name="parameters" element="tns:deleteAssociationType"/>
</message>
<message name="deleteAssociationTypeResponse">
<part name="parameters" element="tns:deleteAssociationTypeResponse"/>
</message>
<message name="getConceptPropertyTypes">
<part name="parameters" element="tns:getConceptPropertyTypes"/>
</message>
<message name="getConceptPropertyTypesResponse">
<part name="parameters" element="tns:getConceptPropertyTypesResponse"/>
</message>
<message name="getTermPropertyTypes">
<part name="parameters" element="tns:getTermPropertyTypes"/>
</message>
<message name="getTermPropertyTypesResponse">
<part name="parameters" element="tns:getTermPropertyTypesResponse"/>
</message>
<message name="getNamespacePropertyTypes">
<part name="parameters" element="tns:getNamespacePropertyTypes"/>
</message>
<message name="getNamespacePropertyTypesResponse">
<part name="parameters" element="tns:getNamespacePropertyTypesResponse"/>
</message>
<message name="getVersionPropertyTypes">
<part name="parameters" element="tns:getVersionPropertyTypes"/>
</message>
<message name="getVersionPropertyTypesResponse">
<part name="parameters" element="tns:getVersionPropertyTypesResponse"/>
</message>
<message name="getSubsetPropertyTypes">
<part name="parameters" element="tns:getSubsetPropertyTypes"/>
</message>
<message name="getSubsetPropertyTypesResponse">
<part name="parameters" element="tns:getSubsetPropertyTypesResponse"/>
</message>
<message name="getSubsetVersionPropertyTypes">
<part name="parameters" element="tns:getSubsetVersionPropertyTypes"/>
</message>
<message name="getSubsetVersionPropertyTypesResponse">
<part name="parameters" element="tns:getSubsetVersionPropertyTypesResponse"/>
</message>
<message name="getAuthorityPropertyTypes">
<part name="parameters" element="tns:getAuthorityPropertyTypes"/>
</message>
<message name="getAuthorityPropertyTypesResponse">
<part name="parameters" element="tns:getAuthorityPropertyTypesResponse"/>
</message>
<message name="findPropertyTypeByName">
<part name="parameters" element="tns:findPropertyTypeByName"/>
</message>
<message name="findPropertyTypeByNameResponse">
<part name="parameters" element="tns:findPropertyTypeByNameResponse"/>
</message>
<message name="findPropertyTypeById">
<part name="parameters" element="tns:findPropertyTypeById"/>
</message>
<message name="findPropertyTypeByIdResponse">
<part name="parameters" element="tns:findPropertyTypeByIdResponse"/>
</message>
<message name="findSubsetPropertyTypeByName">
<part name="parameters" element="tns:findSubsetPropertyTypeByName"/>
</message>
<message name="findSubsetPropertyTypeByNameResponse">
<part name="parameters" element="tns:findSubsetPropertyTypeByNameResponse"/>
</message>
<message name="findSubsetPropertyTypeById">
<part name="parameters" element="tns:findSubsetPropertyTypeById"/>
</message>
<message name="findSubsetPropertyTypeByIdResponse">
<part name="parameters" element="tns:findSubsetPropertyTypeByIdResponse"/>
</message>
<message name="findAuthorityPropertyTypeByName">
<part name="parameters" element="tns:findAuthorityPropertyTypeByName"/>
</message>
<message name="findAuthorityPropertyTypeByNameResponse">
<part name="parameters" element="tns:findAuthorityPropertyTypeByNameResponse"/>
</message>
<message name="findAuthorityPropertyTypeById">
<part name="parameters" element="tns:findAuthorityPropertyTypeById"/>
</message>
<message name="findAuthorityPropertyTypeByIdResponse">
<part name="parameters" element="tns:findAuthorityPropertyTypeByIdResponse"/>
</message>
<message name="isPropertyTypeUsed">
<part name="parameters" element="tns:isPropertyTypeUsed"/>
</message>
<message name="isPropertyTypeUsedResponse">
<part name="parameters" element="tns:isPropertyTypeUsedResponse"/>
</message>
<message name="addPropertyType">
<part name="parameters" element="tns:addPropertyType"/>
</message>
<message name="addPropertyTypeResponse">
<part name="parameters" element="tns:addPropertyTypeResponse"/>
</message>
<message name="deletePropertyType">
<part name="parameters" element="tns:deletePropertyType"/>
</message>
<message name="deletePropertyTypeResponse">
<part name="parameters" element="tns:deletePropertyTypeResponse"/>
</message>
<message name="updatePropertyType">
<part name="parameters" element="tns:updatePropertyType"/>
</message>
<message name="updatePropertyTypeResponse">
<part name="parameters" element="tns:updatePropertyTypeResponse"/>
</message>
<message name="getAllNamespaceQualifierTypes">
<part name="parameters" element="tns:getAllNamespaceQualifierTypes"/>
</message>
<message name="getAllNamespaceQualifierTypesResponse">
<part name="parameters" element="tns:getAllNamespaceQualifierTypesResponse"/>
</message>
<message name="getConceptPropertyQualifierTypes">
<part name="parameters" element="tns:getConceptPropertyQualifierTypes"/>
</message>
<message name="getConceptPropertyQualifierTypesResponse">
<part name="parameters" element="tns:getConceptPropertyQualifierTypesResponse"/>
</message>
<message name="getTermPropertyQualifierTypes">
<part name="parameters" element="tns:getTermPropertyQualifierTypes"/>
</message>
<message name="getTermPropertyQualifierTypesResponse">
<part name="parameters" element="tns:getTermPropertyQualifierTypesResponse"/>
</message>
<message name="getNamespacePropertyQualifierTypes">
<part name="parameters" element="tns:getNamespacePropertyQualifierTypes"/>
</message>
<message name="getNamespacePropertyQualifierTypesResponse">
<part name="parameters" element="tns:getNamespacePropertyQualifierTypesResponse"/>
</message>
<message name="getVersionPropertyQualifierTypes">
<part name="parameters" element="tns:getVersionPropertyQualifierTypes"/>
</message>
<message name="getVersionPropertyQualifierTypesResponse">
<part name="parameters" element="tns:getVersionPropertyQualifierTypesResponse"/>
</message>
<message name="findQualifierTypeByName">
<part name="parameters" element="tns:findQualifierTypeByName"/>
</message>
<message name="findQualifierTypeByNameResponse">
<part name="parameters" element="tns:findQualifierTypeByNameResponse"/>
</message>
<message name="findQualifierTypeById">
<part name="parameters" element="tns:findQualifierTypeById"/>
</message>
<message name="findQualifierTypeByIdResponse">
<part name="parameters" element="tns:findQualifierTypeByIdResponse"/>
</message>
<message name="getAllSubsetQualifierTypes">
<part name="parameters" element="tns:getAllSubsetQualifierTypes"/>
</message>
<message name="getAllSubsetQualifierTypesResponse">
<part name="parameters" element="tns:getAllSubsetQualifierTypesResponse"/>
</message>
<message name="getSubsetPropertyQualifierTypes">
<part name="parameters" element="tns:getSubsetPropertyQualifierTypes"/>
</message>
<message name="getSubsetPropertyQualifierTypesResponse">
<part name="parameters" element="tns:getSubsetPropertyQualifierTypesResponse"/>
</message>
<message name="getSubsetVersionPropertyQualifierTypes">
<part name="parameters" element="tns:getSubsetVersionPropertyQualifierTypes"/>
</message>
<message name="getSubsetVersionPropertyQualifierTypesResponse">
<part name="parameters" element="tns:getSubsetVersionPropertyQualifierTypesResponse"/>
</message>
<message name="findSubsetQualifierTypeByName">
<part name="parameters" element="tns:findSubsetQualifierTypeByName"/>
</message>
<message name="findSubsetQualifierTypeByNameResponse">
<part name="parameters" element="tns:findSubsetQualifierTypeByNameResponse"/>
</message>
<message name="findSubsetQualifierTypeById">
<part name="parameters" element="tns:findSubsetQualifierTypeById"/>
</message>
<message name="findSubsetQualifierTypeByIdResponse">
<part name="parameters" element="tns:findSubsetQualifierTypeByIdResponse"/>
</message>
<message name="getAuthorityPropertyQualifierTypes">
<part name="parameters" element="tns:getAuthorityPropertyQualifierTypes"/>
</message>
<message name="getAuthorityPropertyQualifierTypesResponse">
<part name="parameters" element="tns:getAuthorityPropertyQualifierTypesResponse"/>
</message>
<message name="findAuthorityQualifierTypeByName">
<part name="parameters" element="tns:findAuthorityQualifierTypeByName"/>
</message>
<message name="findAuthorityQualifierTypeByNameResponse">
<part name="parameters" element="tns:findAuthorityQualifierTypeByNameResponse"/>
</message>
<message name="findAuthorityQualifierTypeById">
<part name="parameters" element="tns:findAuthorityQualifierTypeById"/>
</message>
<message name="findAuthorityQualifierTypeByIdResponse">
<part name="parameters" element="tns:findAuthorityQualifierTypeByIdResponse"/>
</message>
<message name="isQualifierTypeUsed">
<part name="parameters" element="tns:isQualifierTypeUsed"/>
</message>
<message name="isQualifierTypeUsedResponse">
<part name="parameters" element="tns:isQualifierTypeUsedResponse"/>
</message>
<message name="addQualifierType">
<part name="parameters" element="tns:addQualifierType"/>
</message>
<message name="addQualifierTypeResponse">
<part name="parameters" element="tns:addQualifierTypeResponse"/>
</message>
<message name="deleteQualifierType">
<part name="parameters" element="tns:deleteQualifierType"/>
</message>
<message name="deleteQualifierTypeResponse">
<part name="parameters" element="tns:deleteQualifierTypeResponse"/>
</message>
<message name="updateQualifierType">
<part name="parameters" element="tns:updateQualifierType"/>
</message>
<message name="updateQualifierTypeResponse">
<part name="parameters" element="tns:updateQualifierTypeResponse"/>
</message>
<message name="findConceptByName">
<part name="parameters" element="tns:findConceptByName"/>
</message>
<message name="findConceptByNameResponse">
<part name="parameters" element="tns:findConceptByNameResponse"/>
</message>
<message name="findConceptByCode">
<part name="parameters" element="tns:findConceptByCode"/>
</message>
<message name="findConceptByCodeResponse">
<part name="parameters" element="tns:findConceptByCodeResponse"/>
</message>
<message name="findConceptById">
<part name="parameters" element="tns:findConceptById"/>
</message>
<message name="findConceptByIdResponse">
<part name="parameters" element="tns:findConceptByIdResponse"/>
</message>
<message name="findTermsByName">
<part name="parameters" element="tns:findTermsByName"/>
</message>
<message name="findTermsByNameResponse">
<part name="parameters" element="tns:findTermsByNameResponse"/>
</message>
<message name="findTermByCode">
<part name="parameters" element="tns:findTermByCode"/>
</message>
<message name="findTermByCodeResponse">
<part name="parameters" element="tns:findTermByCodeResponse"/>
</message>
<message name="findTermById">
<part name="parameters" element="tns:findTermById"/>
</message>
<message name="findTermByIdResponse">
<part name="parameters" element="tns:findTermByIdResponse"/>
</message>
<message name="addTerm">
<part name="parameters" element="tns:addTerm"/>
</message>
<message name="addTermResponse">
<part name="parameters" element="tns:addTermResponse"/>
</message>
<message name="deleteTerm">
<part name="parameters" element="tns:deleteTerm"/>
</message>
<message name="deleteTermResponse">
<part name="parameters" element="tns:deleteTermResponse"/>
</message>
<message name="updateTerm">
<part name="parameters" element="tns:updateTerm"/>
</message>
<message name="updateTermResponse">
<part name="parameters" element="tns:updateTermResponse"/>
</message>
<message name="generateNextTermId">
<part name="parameters" element="tns:generateNextTermId"/>
</message>
<message name="generateNextTermIdResponse">
<part name="parameters" element="tns:generateNextTermIdResponse"/>
</message>
<message name="addTermProperty">
<part name="parameters" element="tns:addTermProperty"/>
</message>
<message name="addTermPropertyResponse">
<part name="parameters" element="tns:addTermPropertyResponse"/>
</message>
<message name="deleteTermProperty">
<part name="parameters" element="tns:deleteTermProperty"/>
</message>
<message name="deleteTermPropertyResponse">
<part name="parameters" element="tns:deleteTermPropertyResponse"/>
</message>
<message name="updateTermProperty">
<part name="parameters" element="tns:updateTermProperty"/>
</message>
<message name="updateTermPropertyResponse">
<part name="parameters" element="tns:updateTermPropertyResponse"/>
</message>
<message name="generateNamespaceItemId">
<part name="parameters" element="tns:generateNamespaceItemId"/>
</message>
<message name="generateNamespaceItemIdResponse">
<part name="parameters" element="tns:generateNamespaceItemIdResponse"/>
</message>
<message name="createNamespaceRevision">
<part name="parameters" element="tns:createNamespaceRevision"/>
</message>
<message name="createNamespaceRevisionResponse">
<part name="parameters" element="tns:createNamespaceRevisionResponse"/>
</message>
<message name="addAuthority">
<part name="parameters" element="tns:addAuthority"/>
</message>
<message name="addAuthorityResponse">
<part name="parameters" element="tns:addAuthorityResponse"/>
</message>
<message name="syncNamespaceItemId">
<part name="parameters" element="tns:syncNamespaceItemId"/>
</message>
<message name="syncNamespaceItemIdResponse">
<part name="parameters" element="tns:syncNamespaceItemIdResponse"/>
</message>
<message name="createSubsetRevision">
<part name="parameters" element="tns:createSubsetRevision"/>
</message>
<message name="createSubsetRevisionResponse">
<part name="parameters" element="tns:createSubsetRevisionResponse"/>
</message>
<message name="getSystemContextProperty">
<part name="parameters" element="tns:getSystemContextProperty"/>
</message>
<message name="getSystemContextPropertyResponse">
<part name="parameters" element="tns:getSystemContextPropertyResponse"/>
</message>
<message name="saveSystemContextProperty">
<part name="parameters" element="tns:saveSystemContextProperty"/>
</message>
<message name="saveSystemContextPropertyResponse">
<part name="parameters" element="tns:saveSystemContextPropertyResponse"/>
</message>
<message name="getVersions">
<part name="parameters" element="tns:getVersions"/>
</message>
<message name="getVersionsResponse">
<part name="parameters" element="tns:getVersionsResponse"/>
</message>
<message name="getNamespaces">
<part name="parameters" element="tns:getNamespaces"/>
</message>
<message name="getNamespacesResponse">
<part name="parameters" element="tns:getNamespacesResponse"/>
</message>
<message name="fetchTermProperties">
<part name="parameters" element="tns:fetchTermProperties"/>
</message>
<message name="fetchTermPropertiesResponse">
<part name="parameters" element="tns:fetchTermPropertiesResponse"/>
</message>
<message name="addTermAssociation">
<part name="parameters" element="tns:addTermAssociation"/>
</message>
<message name="addTermAssociationResponse">
<part name="parameters" element="tns:addTermAssociationResponse"/>
</message>
<message name="updateTermAssociation">
<part name="parameters" element="tns:updateTermAssociation"/>
</message>
<message name="updateTermAssociationResponse">
<part name="parameters" element="tns:updateTermAssociationResponse"/>
</message>
<message name="deleteTermAssociation">
<part name="parameters" element="tns:deleteTermAssociation"/>
</message>
<message name="deleteTermAssociationResponse">
<part name="parameters" element="tns:deleteTermAssociationResponse"/>
</message>
<message name="fetchTermHistory">
<part name="parameters" element="tns:fetchTermHistory"/>
</message>
<message name="fetchTermHistoryResponse">
<part name="parameters" element="tns:fetchTermHistoryResponse"/>
</message>
<message name="getNavChildContext">
<part name="parameters" element="tns:getNavChildContext"/>
</message>
<message name="getNavChildContextResponse">
<part name="parameters" element="tns:getNavChildContextResponse"/>
</message>
<message name="getSubsetNavChildContext">
<part name="parameters" element="tns:getSubsetNavChildContext"/>
</message>
<message name="getSubsetNavChildContextResponse">
<part name="parameters" element="tns:getSubsetNavChildContextResponse"/>
</message>
<message name="getAssociationNavChildContext">
<part name="parameters" element="tns:getAssociationNavChildContext"/>
</message>
<message name="getAssociationNavChildContextResponse">
<part name="parameters" element="tns:getAssociationNavChildContextResponse"/>
</message>
<message name="getNavParentContext">
<part name="parameters" element="tns:getNavParentContext"/>
</message>
<message name="getNavParentContextResponse">
<part name="parameters" element="tns:getNavParentContextResponse"/>
</message>
<message name="getSubsetNavParentContext">
<part name="parameters" element="tns:getSubsetNavParentContext"/>
</message>
<message name="getSubsetNavParentContextResponse">
<part name="parameters" element="tns:getSubsetNavParentContextResponse"/>
</message>
<message name="getAssociationNavParentContext">
<part name="parameters" element="tns:getAssociationNavParentContext"/>
</message>
<message name="getAssociationNavParentContextResponse">
<part name="parameters" element="tns:getAssociationNavParentContextResponse"/>
</message>
<message name="getConceptChildRoots">
<part name="parameters" element="tns:getConceptChildRoots"/>
</message>
<message name="getConceptChildRootsResponse">
<part name="parameters" element="tns:getConceptChildRootsResponse"/>
</message>
<message name="getSubsetConceptChildRoots">
<part name="parameters" element="tns:getSubsetConceptChildRoots"/>
</message>
<message name="getSubsetConceptChildRootsResponse">
<part name="parameters" element="tns:getSubsetConceptChildRootsResponse"/>
</message>
<message name="getNavChildContextInNamespace">
<part name="parameters" element="tns:getNavChildContextInNamespace"/>
</message>
<message name="getNavChildContextInNamespaceResponse">
<part name="parameters" element="tns:getNavChildContextInNamespaceResponse"/>
</message>
<message name="getNavParentContextInNamespace">
<part name="parameters" element="tns:getNavParentContextInNamespace"/>
</message>
<message name="getNavParentContextInNamespaceResponse">
<part name="parameters" element="tns:getNavParentContextInNamespaceResponse"/>
</message>
<message name="filterSubsetConcepts">
<part name="parameters" element="tns:filterSubsetConcepts"/>
</message>
<message name="filterSubsetConceptsResponse">
<part name="parameters" element="tns:filterSubsetConceptsResponse"/>
</message>
<message name="findConceptsWithNameMatching">
<part name="parameters" element="tns:findConceptsWithNameMatching"/>
</message>
<message name="findConceptsWithNameMatchingResponse">
<part name="parameters" element="tns:findConceptsWithNameMatchingResponse"/>
</message>
<message name="findConceptsWithAllSynonymMatching">
<part name="parameters" element="tns:findConceptsWithAllSynonymMatching"/>
</message>
<message name="findConceptsWithAllSynonymMatchingResponse">
<part name="parameters" element="tns:findConceptsWithAllSynonymMatchingResponse"/>
</message>
<message name="findConceptsWithPropertyMatching">
<part name="parameters" element="tns:findConceptsWithPropertyMatching"/>
</message>
<message name="findConceptsWithPropertyMatchingResponse">
<part name="parameters" element="tns:findConceptsWithPropertyMatchingResponse"/>
</message>
<message name="findConceptsWithPropertyQualifierMatching">
<part name="parameters" element="tns:findConceptsWithPropertyQualifierMatching"/>
</message>
<message name="findConceptsWithPropertyQualifierMatchingResponse">
<part name="parameters" element="tns:findConceptsWithPropertyQualifierMatchingResponse"/>
</message>
<message name="findConceptsWithConceptAssociationMatching">
<part name="parameters" element="tns:findConceptsWithConceptAssociationMatching"/>
</message>
<message name="findConceptsWithConceptAssociationMatchingResponse">
<part name="parameters" element="tns:findConceptsWithConceptAssociationMatchingResponse"/>
</message>
<message name="findConceptsWithInverseConceptAssociationMatching">
<part name="parameters" element="tns:findConceptsWithInverseConceptAssociationMatching"/>
</message>
<message name="findConceptsWithInverseConceptAssociationMatchingResponse">
<part name="parameters" element="tns:findConceptsWithInverseConceptAssociationMatchingResponse"/>
</message>
<message name="findConceptsWithAssociationQualifierMatching">
<part name="parameters" element="tns:findConceptsWithAssociationQualifierMatching"/>
</message>
<message name="findConceptsWithAssociationQualifierMatchingResponse">
<part name="parameters" element="tns:findConceptsWithAssociationQualifierMatchingResponse"/>
</message>
<message name="findConceptsWithSynonymMatching">
<part name="parameters" element="tns:findConceptsWithSynonymMatching"/>
</message>
<message name="findConceptsWithSynonymMatchingResponse">
<part name="parameters" element="tns:findConceptsWithSynonymMatchingResponse"/>
</message>
<message name="findConceptsWithRoleMatching">
<part name="parameters" element="tns:findConceptsWithRoleMatching"/>
</message>
<message name="findConceptsWithRoleMatchingResponse">
<part name="parameters" element="tns:findConceptsWithRoleMatchingResponse"/>
</message>
<message name="findConceptsWithInverseRoleMatching">
<part name="parameters" element="tns:findConceptsWithInverseRoleMatching"/>
</message>
<message name="findConceptsWithInverseRoleMatchingResponse">
<part name="parameters" element="tns:findConceptsWithInverseRoleMatchingResponse"/>
</message>
<message name="findTermsWithNameMatching">
<part name="parameters" element="tns:findTermsWithNameMatching"/>
</message>
<message name="findTermsWithNameMatchingResponse">
<part name="parameters" element="tns:findTermsWithNameMatchingResponse"/>
</message>
<message name="findTermsWithPropertyMatching">
<part name="parameters" element="tns:findTermsWithPropertyMatching"/>
</message>
<message name="findTermsWithPropertyMatchingResponse">
<part name="parameters" element="tns:findTermsWithPropertyMatchingResponse"/>
</message>
<message name="findTermsWithPropertyQualifierMatching">
<part name="parameters" element="tns:findTermsWithPropertyQualifierMatching"/>
</message>
<message name="findTermsWithPropertyQualifierMatchingResponse">
<part name="parameters" element="tns:findTermsWithPropertyQualifierMatchingResponse"/>
</message>
<message name="findTermsWithTermAssociationMatching">
<part name="parameters" element="tns:findTermsWithTermAssociationMatching"/>
</message>
<message name="findTermsWithTermAssociationMatchingResponse">
<part name="parameters" element="tns:findTermsWithTermAssociationMatchingResponse"/>
</message>
<message name="findTermsWithInverseTermAssociationMatching">
<part name="parameters" element="tns:findTermsWithInverseTermAssociationMatching"/>
</message>
<message name="findTermsWithInverseTermAssociationMatchingResponse">
<part name="parameters" element="tns:findTermsWithInverseTermAssociationMatchingResponse"/>
</message>
<message name="findTermsWithAssociationQualifierMatching">
<part name="parameters" element="tns:findTermsWithAssociationQualifierMatching"/>
</message>
<message name="findTermsWithAssociationQualifierMatchingResponse">
<part name="parameters" element="tns:findTermsWithAssociationQualifierMatchingResponse"/>
</message>
<message name="findTermsWithInverseSynonymMatching">
<part name="parameters" element="tns:findTermsWithInverseSynonymMatching"/>
</message>
<message name="findTermsWithInverseSynonymMatchingResponse">
<part name="parameters" element="tns:findTermsWithInverseSynonymMatchingResponse"/>
</message>
<message name="addNamespace">
<part name="parameters" element="tns:addNamespace"/>
</message>
<message name="addNamespaceResponse">
<part name="parameters" element="tns:addNamespaceResponse"/>
</message>
<message name="deleteNamespaceByName">
<part name="parameters" element="tns:deleteNamespaceByName"/>
</message>
<message name="deleteNamespaceByNameResponse">
<part name="parameters" element="tns:deleteNamespaceByNameResponse"/>
</message>
<message name="deleteNamespaceById">
<part name="parameters" element="tns:deleteNamespaceById"/>
</message>
<message name="deleteNamespaceByIdResponse">
<part name="parameters" element="tns:deleteNamespaceByIdResponse"/>
</message>
<message name="updateNamespace">
<part name="parameters" element="tns:updateNamespace"/>
</message>
<message name="updateNamespaceResponse">
<part name="parameters" element="tns:updateNamespaceResponse"/>
</message>
<message name="addNamespaceProperty">
<part name="parameters" element="tns:addNamespaceProperty"/>
</message>
<message name="addNamespacePropertyResponse">
<part name="parameters" element="tns:addNamespacePropertyResponse"/>
</message>
<message name="updateNamespaceProperty">
<part name="parameters" element="tns:updateNamespaceProperty"/>
</message>
<message name="updateNamespacePropertyResponse">
<part name="parameters" element="tns:updateNamespacePropertyResponse"/>
</message>
<message name="deleteNamespaceProperty">
<part name="parameters" element="tns:deleteNamespaceProperty"/>
</message>
<message name="deleteNamespacePropertyResponse">
<part name="parameters" element="tns:deleteNamespacePropertyResponse"/>
</message>
<message name="addVersion">
<part name="parameters" element="tns:addVersion"/>
</message>
<message name="addVersionResponse">
<part name="parameters" element="tns:addVersionResponse"/>
</message>
<message name="updateVersion">
<part name="parameters" element="tns:updateVersion"/>
</message>
<message name="updateVersionResponse">
<part name="parameters" element="tns:updateVersionResponse"/>
</message>
<message name="deleteVersionById">
<part name="parameters" element="tns:deleteVersionById"/>
</message>
<message name="deleteVersionByIdResponse">
<part name="parameters" element="tns:deleteVersionByIdResponse"/>
</message>
<message name="deleteVersionByName">
<part name="parameters" element="tns:deleteVersionByName"/>
</message>
<message name="deleteVersionByNameResponse">
<part name="parameters" element="tns:deleteVersionByNameResponse"/>
</message>
<message name="addVersionProperty">
<part name="parameters" element="tns:addVersionProperty"/>
</message>
<message name="addVersionPropertyResponse">
<part name="parameters" element="tns:addVersionPropertyResponse"/>
</message>
<message name="updateVersionProperty">
<part name="parameters" element="tns:updateVersionProperty"/>
</message>
<message name="updateVersionPropertyResponse">
<part name="parameters" element="tns:updateVersionPropertyResponse"/>
</message>
<message name="deleteVersionProperty">
<part name="parameters" element="tns:deleteVersionProperty"/>
</message>
<message name="deleteVersionPropertyResponse">
<part name="parameters" element="tns:deleteVersionPropertyResponse"/>
</message>
<message name="isWorkingVersion">
<part name="parameters" element="tns:isWorkingVersion"/>
</message>
<message name="isWorkingVersionResponse">
<part name="parameters" element="tns:isWorkingVersionResponse"/>
</message>
<message name="addConcept">
<part name="parameters" element="tns:addConcept"/>
</message>
<message name="addConceptResponse">
<part name="parameters" element="tns:addConceptResponse"/>
</message>
<message name="updateConcept">
<part name="parameters" element="tns:updateConcept"/>
</message>
<message name="updateConceptResponse">
<part name="parameters" element="tns:updateConceptResponse"/>
</message>
<message name="deleteConcept">
<part name="parameters" element="tns:deleteConcept"/>
</message>
<message name="deleteConceptResponse">
<part name="parameters" element="tns:deleteConceptResponse"/>
</message>
<message name="generateNextConceptId">
<part name="parameters" element="tns:generateNextConceptId"/>
</message>
<message name="generateNextConceptIdResponse">
<part name="parameters" element="tns:generateNextConceptIdResponse"/>
</message>
<message name="addConceptProperty">
<part name="parameters" element="tns:addConceptProperty"/>
</message>
<message name="addConceptPropertyResponse">
<part name="parameters" element="tns:addConceptPropertyResponse"/>
</message>
<message name="deleteConceptProperty">
<part name="parameters" element="tns:deleteConceptProperty"/>
</message>
<message name="deleteConceptPropertyResponse">
<part name="parameters" element="tns:deleteConceptPropertyResponse"/>
</message>
<message name="updateConceptProperty">
<part name="parameters" element="tns:updateConceptProperty"/>
</message>
<message name="updateConceptPropertyResponse">
<part name="parameters" element="tns:updateConceptPropertyResponse"/>
</message>
<message name="addSynonym">
<part name="parameters" element="tns:addSynonym"/>
</message>
<message name="addSynonymResponse">
<part name="parameters" element="tns:addSynonymResponse"/>
</message>
<message name="deleteSynonym">
<part name="parameters" element="tns:deleteSynonym"/>
</message>
<message name="deleteSynonymResponse">
<part name="parameters" element="tns:deleteSynonymResponse"/>
</message>
<message name="updateSynonym">
<part name="parameters" element="tns:updateSynonym"/>
</message>
<message name="updateSynonymResponse">
<part name="parameters" element="tns:updateSynonymResponse"/>
</message>
<message name="addConceptAssociation">
<part name="parameters" element="tns:addConceptAssociation"/>
</message>
<message name="addConceptAssociationResponse">
<part name="parameters" element="tns:addConceptAssociationResponse"/>
</message>
<message name="updateConceptAssociation">
<part name="parameters" element="tns:updateConceptAssociation"/>
</message>
<message name="updateConceptAssociationResponse">
<part name="parameters" element="tns:updateConceptAssociationResponse"/>
</message>
<message name="deleteConceptAssociation">
<part name="parameters" element="tns:deleteConceptAssociation"/>
</message>
<message name="deleteConceptAssociationResponse">
<part name="parameters" element="tns:deleteConceptAssociationResponse"/>
</message>
<message name="getAllKinds">
<part name="parameters" element="tns:getAllKinds"/>
</message>
<message name="getAllKindsResponse">
<part name="parameters" element="tns:getAllKindsResponse"/>
</message>
<message name="getKinds">
<part name="parameters" element="tns:getKinds"/>
</message>
<message name="getKindsResponse">
<part name="parameters" element="tns:getKindsResponse"/>
</message>
<message name="getAllRoleTypes">
<part name="parameters" element="tns:getAllRoleTypes"/>
</message>
<message name="getAllRoleTypesResponse">
<part name="parameters" element="tns:getAllRoleTypesResponse"/>
</message>
<message name="findRoleTypeByName">
<part name="parameters" element="tns:findRoleTypeByName"/>
</message>
<message name="findRoleTypeByNameResponse">
<part name="parameters" element="tns:findRoleTypeByNameResponse"/>
</message>
<message name="findRoleTypeById">
<part name="parameters" element="tns:findRoleTypeById"/>
</message>
<message name="findRoleTypeByIdResponse">
<part name="parameters" element="tns:findRoleTypeByIdResponse"/>
</message>
<message name="findRoleTypeByCode">
<part name="parameters" element="tns:findRoleTypeByCode"/>
</message>
<message name="findRoleTypeByCodeResponse">
<part name="parameters" element="tns:findRoleTypeByCodeResponse"/>
</message>
<message name="addRoleType">
<part name="parameters" element="tns:addRoleType"/>
</message>
<message name="addRoleTypeResponse">
<part name="parameters" element="tns:addRoleTypeResponse"/>
</message>
<message name="updateRoleType">
<part name="parameters" element="tns:updateRoleType"/>
</message>
<message name="updateRoleTypeResponse">
<part name="parameters" element="tns:updateRoleTypeResponse"/>
</message>
<message name="deleteRoleType">
<part name="parameters" element="tns:deleteRoleType"/>
</message>
<message name="deleteRoleTypeResponse">
<part name="parameters" element="tns:deleteRoleTypeResponse"/>
</message>
<message name="deleteRoleTypeWithReferences">
<part name="parameters" element="tns:deleteRoleTypeWithReferences"/>
</message>
<message name="deleteRoleTypeWithReferencesResponse">
<part name="parameters" element="tns:deleteRoleTypeWithReferencesResponse"/>
</message>
<message name="isRoleTypeUsed">
<part name="parameters" element="tns:isRoleTypeUsed"/>
</message>
<message name="isRoleTypeUsedResponse">
<part name="parameters" element="tns:isRoleTypeUsedResponse"/>
</message>
<message name="fetchRightIdentityReferences">
<part name="parameters" element="tns:fetchRightIdentityReferences"/>
</message>
<message name="fetchRightIdentityReferencesResponse">
<part name="parameters" element="tns:fetchRightIdentityReferencesResponse"/>
</message>
<message name="fetchParentReferences">
<part name="parameters" element="tns:fetchParentReferences"/>
</message>
<message name="fetchParentReferencesResponse">
<part name="parameters" element="tns:fetchParentReferencesResponse"/>
</message>
<message name="updatePrimitive">
<part name="parameters" element="tns:updatePrimitive"/>
</message>
<message name="updatePrimitiveResponse">
<part name="parameters" element="tns:updatePrimitiveResponse"/>
</message>
<message name="addDefiningConcept">
<part name="parameters" element="tns:addDefiningConcept"/>
</message>
<message name="addDefiningConceptResponse">
<part name="parameters" element="tns:addDefiningConceptResponse"/>
</message>
<message name="deleteDefiningConcept">
<part name="parameters" element="tns:deleteDefiningConcept"/>
</message>
<message name="deleteDefiningConceptResponse">
<part name="parameters" element="tns:deleteDefiningConceptResponse"/>
</message>
<message name="updateDefiningConcept">
<part name="parameters" element="tns:updateDefiningConcept"/>
</message>
<message name="updateDefiningConceptResponse">
<part name="parameters" element="tns:updateDefiningConceptResponse"/>
</message>
<message name="addDefiningRole">
<part name="parameters" element="tns:addDefiningRole"/>
</message>
<message name="addDefiningRoleResponse">
<part name="parameters" element="tns:addDefiningRoleResponse"/>
</message>
<message name="deleteDefiningRole">
<part name="parameters" element="tns:deleteDefiningRole"/>
</message>
<message name="deleteDefiningRoleResponse">
<part name="parameters" element="tns:deleteDefiningRoleResponse"/>
</message>
<message name="updateDefiningRole">
<part name="parameters" element="tns:updateDefiningRole"/>
</message>
<message name="updateDefiningRoleResponse">
<part name="parameters" element="tns:updateDefiningRoleResponse"/>
</message>
<message name="createRoleGroup">
<part name="parameters" element="tns:createRoleGroup"/>
</message>
<message name="createRoleGroupResponse">
<part name="parameters" element="tns:createRoleGroupResponse"/>
</message>
<message name="ungroupRoleGroup">
<part name="parameters" element="tns:ungroupRoleGroup"/>
</message>
<message name="ungroupRoleGroupResponse">
<part name="parameters" element="tns:ungroupRoleGroupResponse"/>
</message>
<message name="isSubConcept">
<part name="parameters" element="tns:isSubConcept"/>
</message>
<message name="isSubConceptResponse">
<part name="parameters" element="tns:isSubConceptResponse"/>
</message>
<message name="isSubConceptOfConcepts">
<part name="parameters" element="tns:isSubConceptOfConcepts"/>
</message>
<message name="isSubConceptOfConceptsResponse">
<part name="parameters" element="tns:isSubConceptOfConceptsResponse"/>
</message>
<message name="isSubConceptByName">
<part name="parameters" element="tns:isSubConceptByName"/>
</message>
<message name="isSubConceptByNameResponse">
<part name="parameters" element="tns:isSubConceptByNameResponse"/>
</message>
<message name="isSubConceptById">
<part name="parameters" element="tns:isSubConceptById"/>
</message>
<message name="isSubConceptByIdResponse">
<part name="parameters" element="tns:isSubConceptByIdResponse"/>
</message>
<message name="isSubConceptByCode">
<part name="parameters" element="tns:isSubConceptByCode"/>
</message>
<message name="isSubConceptByCodeResponse">
<part name="parameters" element="tns:isSubConceptByCodeResponse"/>
</message>
<message name="isSubConceptOfConceptsByName">
<part name="parameters" element="tns:isSubConceptOfConceptsByName"/>
</message>
<message name="isSubConceptOfConceptsByNameResponse">
<part name="parameters" element="tns:isSubConceptOfConceptsByNameResponse"/>
</message>
<message name="getSubConcepts">
<part name="parameters" element="tns:getSubConcepts"/>
</message>
<message name="getSubConceptsResponse">
<part name="parameters" element="tns:getSubConceptsResponse"/>
</message>
<message name="getClassifyDetail">
<part name="parameters" element="tns:getClassifyDetail"/>
</message>
<message name="getClassifyDetailResponse">
<part name="parameters" element="tns:getClassifyDetailResponse"/>
</message>
<message name="findAllSubsets">
<part name="parameters" element="tns:findAllSubsets"/>
</message>
<message name="findAllSubsetsResponse">
<part name="parameters" element="tns:findAllSubsetsResponse"/>
</message>
<message name="findSubset">
<part name="parameters" element="tns:findSubset"/>
</message>
<message name="findSubsetResponse">
<part name="parameters" element="tns:findSubsetResponse"/>
</message>
<message name="findSubsetById">
<part name="parameters" element="tns:findSubsetById"/>
</message>
<message name="findSubsetByIdResponse">
<part name="parameters" element="tns:findSubsetByIdResponse"/>
</message>
<message name="findSubsetByName">
<part name="parameters" element="tns:findSubsetByName"/>
</message>
<message name="findSubsetByNameResponse">
<part name="parameters" element="tns:findSubsetByNameResponse"/>
</message>
<message name="fetchConceptSubsets">
<part name="parameters" element="tns:fetchConceptSubsets"/>
</message>
<message name="fetchConceptSubsetsResponse">
<part name="parameters" element="tns:fetchConceptSubsetsResponse"/>
</message>
<message name="addSubset">
<part name="parameters" element="tns:addSubset"/>
</message>
<message name="addSubsetResponse">
<part name="parameters" element="tns:addSubsetResponse"/>
</message>
<message name="fetchSubsetPreview">
<part name="parameters" element="tns:fetchSubsetPreview"/>
</message>
<message name="fetchSubsetPreviewResponse">
<part name="parameters" element="tns:fetchSubsetPreviewResponse"/>
</message>
<message name="saveSubsetExpression">
<part name="parameters" element="tns:saveSubsetExpression"/>
</message>
<message name="saveSubsetExpressionResponse">
<part name="parameters" element="tns:saveSubsetExpressionResponse"/>
</message>
<message name="buildSubset">
<part name="parameters" element="tns:buildSubset"/>
</message>
<message name="buildSubsetResponse">
<part name="parameters" element="tns:buildSubsetResponse"/>
</message>
<message name="updateSubset">
<part name="parameters" element="tns:updateSubset"/>
</message>
<message name="updateSubsetResponse">
<part name="parameters" element="tns:updateSubsetResponse"/>
</message>
<message name="deleteSubset">
<part name="parameters" element="tns:deleteSubset"/>
</message>
<message name="deleteSubsetResponse">
<part name="parameters" element="tns:deleteSubsetResponse"/>
</message>
<message name="fetchSubsetConcepts">
<part name="parameters" element="tns:fetchSubsetConcepts"/>
</message>
<message name="fetchSubsetConceptsResponse">
<part name="parameters" element="tns:fetchSubsetConceptsResponse"/>
</message>
<message name="fetchSubsetConceptCount">
<part name="parameters" element="tns:fetchSubsetConceptCount"/>
</message>
<message name="fetchSubsetConceptCountResponse">
<part name="parameters" element="tns:fetchSubsetConceptCountResponse"/>
</message>
<message name="fetchSubsetNamespaces">
<part name="parameters" element="tns:fetchSubsetNamespaces"/>
</message>
<message name="fetchSubsetNamespacesResponse">
<part name="parameters" element="tns:fetchSubsetNamespacesResponse"/>
</message>
<message name="addSubsetProperty">
<part name="parameters" element="tns:addSubsetProperty"/>
</message>
<message name="addSubsetPropertyResponse">
<part name="parameters" element="tns:addSubsetPropertyResponse"/>
</message>
<message name="updateSubsetProperty">
<part name="parameters" element="tns:updateSubsetProperty"/>
</message>
<message name="updateSubsetPropertyResponse">
<part name="parameters" element="tns:updateSubsetPropertyResponse"/>
</message>
<message name="deleteSubsetProperty">
<part name="parameters" element="tns:deleteSubsetProperty"/>
</message>
<message name="deleteSubsetPropertyResponse">
<part name="parameters" element="tns:deleteSubsetPropertyResponse"/>
</message>
<message name="getSubsetVersions">
<part name="parameters" element="tns:getSubsetVersions"/>
</message>
<message name="getSubsetVersionsResponse">
<part name="parameters" element="tns:getSubsetVersionsResponse"/>
</message>
<message name="getSubsetVersion">
<part name="parameters" element="tns:getSubsetVersion"/>
</message>
<message name="getSubsetVersionResponse">
<part name="parameters" element="tns:getSubsetVersionResponse"/>
</message>
<message name="getSubsetVersionByTime">
<part name="parameters" element="tns:getSubsetVersionByTime"/>
</message>
<message name="getSubsetVersionByTimeResponse">
<part name="parameters" element="tns:getSubsetVersionByTimeResponse"/>
</message>
<message name="findSubsetVersionByName">
<part name="parameters" element="tns:findSubsetVersionByName"/>
</message>
<message name="findSubsetVersionByNameResponse">
<part name="parameters" element="tns:findSubsetVersionByNameResponse"/>
</message>
<message name="findSubsetVersionById">
<part name="parameters" element="tns:findSubsetVersionById"/>
</message>
<message name="findSubsetVersionByIdResponse">
<part name="parameters" element="tns:findSubsetVersionByIdResponse"/>
</message>
<message name="addSubsetVersion">
<part name="parameters" element="tns:addSubsetVersion"/>
</message>
<message name="addSubsetVersionResponse">
<part name="parameters" element="tns:addSubsetVersionResponse"/>
</message>
<message name="updateSubsetVersion">
<part name="parameters" element="tns:updateSubsetVersion"/>
</message>
<message name="updateSubsetVersionResponse">
<part name="parameters" element="tns:updateSubsetVersionResponse"/>
</message>
<message name="deleteSubsetVersionById">
<part name="parameters" element="tns:deleteSubsetVersionById"/>
</message>
<message name="deleteSubsetVersionByIdResponse">
<part name="parameters" element="tns:deleteSubsetVersionByIdResponse"/>
</message>
<message name="deleteSubsetVersionByName">
<part name="parameters" element="tns:deleteSubsetVersionByName"/>
</message>
<message name="deleteSubsetVersionByNameResponse">
<part name="parameters" element="tns:deleteSubsetVersionByNameResponse"/>
</message>
<message name="addSubsetVersionProperty">
<part name="parameters" element="tns:addSubsetVersionProperty"/>
</message>
<message name="addSubsetVersionPropertyResponse">
<part name="parameters" element="tns:addSubsetVersionPropertyResponse"/>
</message>
<message name="updateSubsetVersionProperty">
<part name="parameters" element="tns:updateSubsetVersionProperty"/>
</message>
<message name="updateSubsetVersionPropertyResponse">
<part name="parameters" element="tns:updateSubsetVersionPropertyResponse"/>
</message>
<message name="deleteSubsetVersionProperty">
<part name="parameters" element="tns:deleteSubsetVersionProperty"/>
</message>
<message name="deleteSubsetVersionPropertyResponse">
<part name="parameters" element="tns:deleteSubsetVersionPropertyResponse"/>
</message>
<message name="ping">
<part name="parameters" element="tns:ping"/>
</message>
<message name="pingResponse">
<part name="parameters" element="tns:pingResponse"/>
</message>
<message name="getServerVersion">
<part name="parameters" element="tns:getServerVersion"/>
</message>
<message name="getServerVersionResponse">
<part name="parameters" element="tns:getServerVersionResponse"/>
</message>
<message name="getServerDatabaseType">
<part name="parameters" element="tns:getServerDatabaseType"/>
</message>
<message name="getServerDatabaseTypeResponse">
<part name="parameters" element="tns:getServerDatabaseTypeResponse"/>
</message>
<message name="getSchemaVersion">
<part name="parameters" element="tns:getSchemaVersion"/>
</message>
<message name="getSchemaVersionResponse">
<part name="parameters" element="tns:getSchemaVersionResponse"/>
</message>
<message name="getLicense">
<part name="parameters" element="tns:getLicense"/>
</message>
<message name="getLicenseResponse">
<part name="parameters" element="tns:getLicenseResponse"/>
</message>
<message name="getAllLicenses">
<part name="parameters" element="tns:getAllLicenses"/>
</message>
<message name="getAllLicensesResponse">
<part name="parameters" element="tns:getAllLicensesResponse"/>
</message>
<message name="executeSQL">
<part name="parameters" element="tns:executeSQL"/>
</message>
<message name="executeSQLResponse">
<part name="parameters" element="tns:executeSQLResponse"/>
</message>
<message name="executeSQLQuery">
<part name="parameters" element="tns:executeSQLQuery"/>
</message>
<message name="executeSQLQueryResponse">
<part name="parameters" element="tns:executeSQLQueryResponse"/>
</message>
<message name="executeSQLUpdate">
<part name="parameters" element="tns:executeSQLUpdate"/>
</message>
<message name="executeSQLUpdateResponse">
<part name="parameters" element="tns:executeSQLUpdateResponse"/>
</message>
<message name="executeSQLUpdates">
<part name="parameters" element="tns:executeSQLUpdates"/>
</message>
<message name="executeSQLUpdatesResponse">
<part name="parameters" element="tns:executeSQLUpdatesResponse"/>
</message>
<message name="executeBatchSQLUpdate">
<part name="parameters" element="tns:executeBatchSQLUpdate"/>
</message>
<message name="executeBatchSQLUpdateResponse">
<part name="parameters" element="tns:executeBatchSQLUpdateResponse"/>
</message>
<message name="getUserContextProperty">
<part name="parameters" element="tns:getUserContextProperty"/>
</message>
<message name="getUserContextPropertyResponse">
<part name="parameters" element="tns:getUserContextPropertyResponse"/>
</message>
<message name="getUserContextPropertyKeys">
<part name="parameters" element="tns:getUserContextPropertyKeys"/>
</message>
<message name="getUserContextPropertyKeysResponse">
<part name="parameters" element="tns:getUserContextPropertyKeysResponse"/>
</message>
<message name="saveUserContextProperty">
<part name="parameters" element="tns:saveUserContextProperty"/>
</message>
<message name="saveUserContextPropertyResponse">
<part name="parameters" element="tns:saveUserContextPropertyResponse"/>
</message>
<message name="deleteUserContextProperty">
<part name="parameters" element="tns:deleteUserContextProperty"/>
</message>
<message name="deleteUserContextPropertyResponse">
<part name="parameters" element="tns:deleteUserContextPropertyResponse"/>
</message>
<message name="getSystemContextPropertyKeys">
<part name="parameters" element="tns:getSystemContextPropertyKeys"/>
</message>
<message name="getSystemContextPropertyKeysResponse">
<part name="parameters" element="tns:getSystemContextPropertyKeysResponse"/>
</message>
<message name="deleteSystemContextProperty">
<part name="parameters" element="tns:deleteSystemContextProperty"/>
</message>
<message name="deleteSystemContextPropertyResponse">
<part name="parameters" element="tns:deleteSystemContextPropertyResponse"/>
</message>
<message name="hasAuthorityPermission">
<part name="parameters" element="tns:hasAuthorityPermission"/>
</message>
<message name="hasAuthorityPermissionResponse">
<part name="parameters" element="tns:hasAuthorityPermissionResponse"/>
</message>
<message name="hasNamespacePermission">
<part name="parameters" element="tns:hasNamespacePermission"/>
</message>
<message name="hasNamespacePermissionResponse">
<part name="parameters" element="tns:hasNamespacePermissionResponse"/>
</message>
<message name="hasSubsetPermission">
<part name="parameters" element="tns:hasSubsetPermission"/>
</message>
<message name="hasSubsetPermissionResponse">
<part name="parameters" element="tns:hasSubsetPermissionResponse"/>
</message>
<message name="generateSubsetItemId">
<part name="parameters" element="tns:generateSubsetItemId"/>
</message>
<message name="generateSubsetItemIdResponse">
<part name="parameters" element="tns:generateSubsetItemIdResponse"/>
</message>
<message name="generateAuthorityItemId">
<part name="parameters" element="tns:generateAuthorityItemId"/>
</message>
<message name="generateAuthorityItemIdResponse">
<part name="parameters" element="tns:generateAuthorityItemIdResponse"/>
</message>
<message name="syncSubsetItemId">
<part name="parameters" element="tns:syncSubsetItemId"/>
</message>
<message name="syncSubsetItemIdResponse">
<part name="parameters" element="tns:syncSubsetItemIdResponse"/>
</message>
<message name="syncAuthorityItemId">
<part name="parameters" element="tns:syncAuthorityItemId"/>
</message>
<message name="syncAuthorityItemIdResponse">
<part name="parameters" element="tns:syncAuthorityItemIdResponse"/>
</message>
<message name="hasAdminPermission">
<part name="parameters" element="tns:hasAdminPermission"/>
</message>
<message name="hasAdminPermissionResponse">
<part name="parameters" element="tns:hasAdminPermissionResponse"/>
</message>
<portType name="DtsQueryDaoWS">
<operation name="getVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionRequest" message="tns:getVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionResponse" message="tns:getVersionResponse"/>
</operation>
<operation name="getClassifierStatus">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getClassifierStatusRequest" message="tns:getClassifierStatus"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getClassifierStatusResponse" message="tns:getClassifierStatusResponse"/>
</operation>
<operation name="getClassifierHistory">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getClassifierHistoryRequest" message="tns:getClassifierHistory"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getClassifierHistoryResponse" message="tns:getClassifierHistoryResponse"/>
</operation>
<operation name="fetchConceptHistory">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchConceptHistoryRequest" message="tns:fetchConceptHistory"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchConceptHistoryResponse" message="tns:fetchConceptHistoryResponse"/>
</operation>
<operation name="getRoleTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getRoleTypesRequest" message="tns:getRoleTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getRoleTypesResponse" message="tns:getRoleTypesResponse"/>
</operation>
<operation name="getAssociationTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAssociationTypesRequest" message="tns:getAssociationTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAssociationTypesResponse" message="tns:getAssociationTypesResponse"/>
</operation>
<operation name="getSynonymTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSynonymTypesRequest" message="tns:getSynonymTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSynonymTypesResponse" message="tns:getSynonymTypesResponse"/>
</operation>
<operation name="classify">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/classifyRequest" message="tns:classify"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/classifyResponse" message="tns:classifyResponse"/>
</operation>
<operation name="fetchAuthorityByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchAuthorityByNameRequest" message="tns:fetchAuthorityByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchAuthorityByNameResponse" message="tns:fetchAuthorityByNameResponse"/>
</operation>
<operation name="fetchAuthorityById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchAuthorityByIdRequest" message="tns:fetchAuthorityById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchAuthorityByIdResponse" message="tns:fetchAuthorityByIdResponse"/>
</operation>
<operation name="getAllPropertyTypesOfAuthority">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllPropertyTypesOfAuthorityRequest" message="tns:getAllPropertyTypesOfAuthority"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllPropertyTypesOfAuthorityResponse" message="tns:getAllPropertyTypesOfAuthorityResponse"/>
</operation>
<operation name="getAuthorities">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAuthoritiesRequest" message="tns:getAuthorities"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAuthoritiesResponse" message="tns:getAuthoritiesResponse"/>
</operation>
<operation name="updateAuthority">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateAuthorityRequest" message="tns:updateAuthority"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateAuthorityResponse" message="tns:updateAuthorityResponse"/>
</operation>
<operation name="deleteAuthorityByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAuthorityByNameRequest" message="tns:deleteAuthorityByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAuthorityByNameResponse" message="tns:deleteAuthorityByNameResponse"/>
</operation>
<operation name="deleteAuthorityById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAuthorityByIdRequest" message="tns:deleteAuthorityById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAuthorityByIdResponse" message="tns:deleteAuthorityByIdResponse"/>
</operation>
<operation name="addAuthorityProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addAuthorityPropertyRequest" message="tns:addAuthorityProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addAuthorityPropertyResponse" message="tns:addAuthorityPropertyResponse"/>
</operation>
<operation name="updateAuthorityProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateAuthorityPropertyRequest" message="tns:updateAuthorityProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateAuthorityPropertyResponse" message="tns:updateAuthorityPropertyResponse"/>
</operation>
<operation name="deleteAuthorityProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAuthorityPropertyRequest" message="tns:deleteAuthorityProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAuthorityPropertyResponse" message="tns:deleteAuthorityPropertyResponse"/>
</operation>
<operation name="findNamespaceByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findNamespaceByNameRequest" message="tns:findNamespaceByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findNamespaceByNameResponse" message="tns:findNamespaceByNameResponse"/>
</operation>
<operation name="findNamespaceById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findNamespaceByIdRequest" message="tns:findNamespaceById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findNamespaceByIdResponse" message="tns:findNamespaceByIdResponse"/>
</operation>
<operation name="findNamespaceByCode">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findNamespaceByCodeRequest" message="tns:findNamespaceByCode"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findNamespaceByCodeResponse" message="tns:findNamespaceByCodeResponse"/>
</operation>
<operation name="getVersionByTime">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionByTimeRequest" message="tns:getVersionByTime"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionByTimeResponse" message="tns:getVersionByTimeResponse"/>
</operation>
<operation name="fetchVersionByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchVersionByNameRequest" message="tns:fetchVersionByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchVersionByNameResponse" message="tns:fetchVersionByNameResponse"/>
</operation>
<operation name="fetchVersionById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchVersionByIdRequest" message="tns:fetchVersionById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchVersionByIdResponse" message="tns:fetchVersionByIdResponse"/>
</operation>
<operation name="getExtendingNamespaces">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getExtendingNamespacesRequest" message="tns:getExtendingNamespaces"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getExtendingNamespacesResponse" message="tns:getExtendingNamespacesResponse"/>
</operation>
<operation name="deleteNamespaceByCode">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespaceByCodeRequest" message="tns:deleteNamespaceByCode"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespaceByCodeResponse" message="tns:deleteNamespaceByCodeResponse"/>
</operation>
<operation name="addRootConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addRootConceptRequest" message="tns:addRootConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addRootConceptResponse" message="tns:addRootConceptResponse"/>
</operation>
<operation name="deleteRootConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteRootConceptRequest" message="tns:deleteRootConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteRootConceptResponse" message="tns:deleteRootConceptResponse"/>
</operation>
<operation name="getConceptAssociationTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptAssociationTypesRequest" message="tns:getConceptAssociationTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptAssociationTypesResponse" message="tns:getConceptAssociationTypesResponse"/>
</operation>
<operation name="getTermAssociationTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getTermAssociationTypesRequest" message="tns:getTermAssociationTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getTermAssociationTypesResponse" message="tns:getTermAssociationTypesResponse"/>
</operation>
<operation name="findAssociationTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAssociationTypeByNameRequest" message="tns:findAssociationTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAssociationTypeByNameResponse" message="tns:findAssociationTypeByNameResponse"/>
</operation>
<operation name="findAssociationTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAssociationTypeByIdRequest" message="tns:findAssociationTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAssociationTypeByIdResponse" message="tns:findAssociationTypeByIdResponse"/>
</operation>
<operation name="isAssociationTypeUsed">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isAssociationTypeUsedRequest" message="tns:isAssociationTypeUsed"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isAssociationTypeUsedResponse" message="tns:isAssociationTypeUsedResponse"/>
</operation>
<operation name="addAssociationType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addAssociationTypeRequest" message="tns:addAssociationType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addAssociationTypeResponse" message="tns:addAssociationTypeResponse"/>
</operation>
<operation name="updateAssociationType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateAssociationTypeRequest" message="tns:updateAssociationType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateAssociationTypeResponse" message="tns:updateAssociationTypeResponse"/>
</operation>
<operation name="deleteAssociationType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAssociationTypeRequest" message="tns:deleteAssociationType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteAssociationTypeResponse" message="tns:deleteAssociationTypeResponse"/>
</operation>
<operation name="getConceptPropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptPropertyTypesRequest" message="tns:getConceptPropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptPropertyTypesResponse" message="tns:getConceptPropertyTypesResponse"/>
</operation>
<operation name="getTermPropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getTermPropertyTypesRequest" message="tns:getTermPropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getTermPropertyTypesResponse" message="tns:getTermPropertyTypesResponse"/>
</operation>
<operation name="getNamespacePropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNamespacePropertyTypesRequest" message="tns:getNamespacePropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNamespacePropertyTypesResponse" message="tns:getNamespacePropertyTypesResponse"/>
</operation>
<operation name="getVersionPropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionPropertyTypesRequest" message="tns:getVersionPropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionPropertyTypesResponse" message="tns:getVersionPropertyTypesResponse"/>
</operation>
<operation name="getSubsetPropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetPropertyTypesRequest" message="tns:getSubsetPropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetPropertyTypesResponse" message="tns:getSubsetPropertyTypesResponse"/>
</operation>
<operation name="getSubsetVersionPropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionPropertyTypesRequest" message="tns:getSubsetVersionPropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionPropertyTypesResponse" message="tns:getSubsetVersionPropertyTypesResponse"/>
</operation>
<operation name="getAuthorityPropertyTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAuthorityPropertyTypesRequest" message="tns:getAuthorityPropertyTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAuthorityPropertyTypesResponse" message="tns:getAuthorityPropertyTypesResponse"/>
</operation>
<operation name="findPropertyTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findPropertyTypeByNameRequest" message="tns:findPropertyTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findPropertyTypeByNameResponse" message="tns:findPropertyTypeByNameResponse"/>
</operation>
<operation name="findPropertyTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findPropertyTypeByIdRequest" message="tns:findPropertyTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findPropertyTypeByIdResponse" message="tns:findPropertyTypeByIdResponse"/>
</operation>
<operation name="findSubsetPropertyTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetPropertyTypeByNameRequest" message="tns:findSubsetPropertyTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetPropertyTypeByNameResponse" message="tns:findSubsetPropertyTypeByNameResponse"/>
</operation>
<operation name="findSubsetPropertyTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetPropertyTypeByIdRequest" message="tns:findSubsetPropertyTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetPropertyTypeByIdResponse" message="tns:findSubsetPropertyTypeByIdResponse"/>
</operation>
<operation name="findAuthorityPropertyTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityPropertyTypeByNameRequest" message="tns:findAuthorityPropertyTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityPropertyTypeByNameResponse" message="tns:findAuthorityPropertyTypeByNameResponse"/>
</operation>
<operation name="findAuthorityPropertyTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityPropertyTypeByIdRequest" message="tns:findAuthorityPropertyTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityPropertyTypeByIdResponse" message="tns:findAuthorityPropertyTypeByIdResponse"/>
</operation>
<operation name="isPropertyTypeUsed">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isPropertyTypeUsedRequest" message="tns:isPropertyTypeUsed"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isPropertyTypeUsedResponse" message="tns:isPropertyTypeUsedResponse"/>
</operation>
<operation name="addPropertyType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addPropertyTypeRequest" message="tns:addPropertyType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addPropertyTypeResponse" message="tns:addPropertyTypeResponse"/>
</operation>
<operation name="deletePropertyType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deletePropertyTypeRequest" message="tns:deletePropertyType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deletePropertyTypeResponse" message="tns:deletePropertyTypeResponse"/>
</operation>
<operation name="updatePropertyType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updatePropertyTypeRequest" message="tns:updatePropertyType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updatePropertyTypeResponse" message="tns:updatePropertyTypeResponse"/>
</operation>
<operation name="getAllNamespaceQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllNamespaceQualifierTypesRequest" message="tns:getAllNamespaceQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllNamespaceQualifierTypesResponse" message="tns:getAllNamespaceQualifierTypesResponse"/>
</operation>
<operation name="getConceptPropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptPropertyQualifierTypesRequest" message="tns:getConceptPropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptPropertyQualifierTypesResponse" message="tns:getConceptPropertyQualifierTypesResponse"/>
</operation>
<operation name="getTermPropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getTermPropertyQualifierTypesRequest" message="tns:getTermPropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getTermPropertyQualifierTypesResponse" message="tns:getTermPropertyQualifierTypesResponse"/>
</operation>
<operation name="getNamespacePropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNamespacePropertyQualifierTypesRequest" message="tns:getNamespacePropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNamespacePropertyQualifierTypesResponse" message="tns:getNamespacePropertyQualifierTypesResponse"/>
</operation>
<operation name="getVersionPropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionPropertyQualifierTypesRequest" message="tns:getVersionPropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionPropertyQualifierTypesResponse" message="tns:getVersionPropertyQualifierTypesResponse"/>
</operation>
<operation name="findQualifierTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findQualifierTypeByNameRequest" message="tns:findQualifierTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findQualifierTypeByNameResponse" message="tns:findQualifierTypeByNameResponse"/>
</operation>
<operation name="findQualifierTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findQualifierTypeByIdRequest" message="tns:findQualifierTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findQualifierTypeByIdResponse" message="tns:findQualifierTypeByIdResponse"/>
</operation>
<operation name="getAllSubsetQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllSubsetQualifierTypesRequest" message="tns:getAllSubsetQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllSubsetQualifierTypesResponse" message="tns:getAllSubsetQualifierTypesResponse"/>
</operation>
<operation name="getSubsetPropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetPropertyQualifierTypesRequest" message="tns:getSubsetPropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetPropertyQualifierTypesResponse" message="tns:getSubsetPropertyQualifierTypesResponse"/>
</operation>
<operation name="getSubsetVersionPropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionPropertyQualifierTypesRequest" message="tns:getSubsetVersionPropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionPropertyQualifierTypesResponse" message="tns:getSubsetVersionPropertyQualifierTypesResponse"/>
</operation>
<operation name="findSubsetQualifierTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetQualifierTypeByNameRequest" message="tns:findSubsetQualifierTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetQualifierTypeByNameResponse" message="tns:findSubsetQualifierTypeByNameResponse"/>
</operation>
<operation name="findSubsetQualifierTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetQualifierTypeByIdRequest" message="tns:findSubsetQualifierTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetQualifierTypeByIdResponse" message="tns:findSubsetQualifierTypeByIdResponse"/>
</operation>
<operation name="getAuthorityPropertyQualifierTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAuthorityPropertyQualifierTypesRequest" message="tns:getAuthorityPropertyQualifierTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAuthorityPropertyQualifierTypesResponse" message="tns:getAuthorityPropertyQualifierTypesResponse"/>
</operation>
<operation name="findAuthorityQualifierTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityQualifierTypeByNameRequest" message="tns:findAuthorityQualifierTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityQualifierTypeByNameResponse" message="tns:findAuthorityQualifierTypeByNameResponse"/>
</operation>
<operation name="findAuthorityQualifierTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityQualifierTypeByIdRequest" message="tns:findAuthorityQualifierTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAuthorityQualifierTypeByIdResponse" message="tns:findAuthorityQualifierTypeByIdResponse"/>
</operation>
<operation name="isQualifierTypeUsed">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isQualifierTypeUsedRequest" message="tns:isQualifierTypeUsed"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isQualifierTypeUsedResponse" message="tns:isQualifierTypeUsedResponse"/>
</operation>
<operation name="addQualifierType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addQualifierTypeRequest" message="tns:addQualifierType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addQualifierTypeResponse" message="tns:addQualifierTypeResponse"/>
</operation>
<operation name="deleteQualifierType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteQualifierTypeRequest" message="tns:deleteQualifierType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteQualifierTypeResponse" message="tns:deleteQualifierTypeResponse"/>
</operation>
<operation name="updateQualifierType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateQualifierTypeRequest" message="tns:updateQualifierType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateQualifierTypeResponse" message="tns:updateQualifierTypeResponse"/>
</operation>
<operation name="findConceptByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptByNameRequest" message="tns:findConceptByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptByNameResponse" message="tns:findConceptByNameResponse"/>
</operation>
<operation name="findConceptByCode">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptByCodeRequest" message="tns:findConceptByCode"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptByCodeResponse" message="tns:findConceptByCodeResponse"/>
</operation>
<operation name="findConceptById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptByIdRequest" message="tns:findConceptById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptByIdResponse" message="tns:findConceptByIdResponse"/>
</operation>
<operation name="findTermsByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsByNameRequest" message="tns:findTermsByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsByNameResponse" message="tns:findTermsByNameResponse"/>
</operation>
<operation name="findTermByCode">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermByCodeRequest" message="tns:findTermByCode"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermByCodeResponse" message="tns:findTermByCodeResponse"/>
</operation>
<operation name="findTermById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermByIdRequest" message="tns:findTermById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermByIdResponse" message="tns:findTermByIdResponse"/>
</operation>
<operation name="addTerm">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addTermRequest" message="tns:addTerm"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addTermResponse" message="tns:addTermResponse"/>
</operation>
<operation name="deleteTerm">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteTermRequest" message="tns:deleteTerm"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteTermResponse" message="tns:deleteTermResponse"/>
</operation>
<operation name="updateTerm">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateTermRequest" message="tns:updateTerm"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateTermResponse" message="tns:updateTermResponse"/>
</operation>
<operation name="generateNextTermId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateNextTermIdRequest" message="tns:generateNextTermId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateNextTermIdResponse" message="tns:generateNextTermIdResponse"/>
</operation>
<operation name="addTermProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addTermPropertyRequest" message="tns:addTermProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addTermPropertyResponse" message="tns:addTermPropertyResponse"/>
</operation>
<operation name="deleteTermProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteTermPropertyRequest" message="tns:deleteTermProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteTermPropertyResponse" message="tns:deleteTermPropertyResponse"/>
</operation>
<operation name="updateTermProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateTermPropertyRequest" message="tns:updateTermProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateTermPropertyResponse" message="tns:updateTermPropertyResponse"/>
</operation>
<operation name="generateNamespaceItemId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateNamespaceItemIdRequest" message="tns:generateNamespaceItemId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateNamespaceItemIdResponse" message="tns:generateNamespaceItemIdResponse"/>
</operation>
<operation name="createNamespaceRevision">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/createNamespaceRevisionRequest" message="tns:createNamespaceRevision"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/createNamespaceRevisionResponse" message="tns:createNamespaceRevisionResponse"/>
</operation>
<operation name="addAuthority">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addAuthorityRequest" message="tns:addAuthority"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addAuthorityResponse" message="tns:addAuthorityResponse"/>
</operation>
<operation name="syncNamespaceItemId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/syncNamespaceItemIdRequest" message="tns:syncNamespaceItemId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/syncNamespaceItemIdResponse" message="tns:syncNamespaceItemIdResponse"/>
</operation>
<operation name="createSubsetRevision">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/createSubsetRevisionRequest" message="tns:createSubsetRevision"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/createSubsetRevisionResponse" message="tns:createSubsetRevisionResponse"/>
</operation>
<operation name="getSystemContextProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSystemContextPropertyRequest" message="tns:getSystemContextProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSystemContextPropertyResponse" message="tns:getSystemContextPropertyResponse"/>
</operation>
<operation name="saveSystemContextProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/saveSystemContextPropertyRequest" message="tns:saveSystemContextProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/saveSystemContextPropertyResponse" message="tns:saveSystemContextPropertyResponse"/>
</operation>
<operation name="getVersions">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionsRequest" message="tns:getVersions"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getVersionsResponse" message="tns:getVersionsResponse"/>
</operation>
<operation name="getNamespaces">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNamespacesRequest" message="tns:getNamespaces"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNamespacesResponse" message="tns:getNamespacesResponse"/>
</operation>
<operation name="fetchTermProperties">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchTermPropertiesRequest" message="tns:fetchTermProperties"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchTermPropertiesResponse" message="tns:fetchTermPropertiesResponse"/>
</operation>
<operation name="addTermAssociation">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addTermAssociationRequest" message="tns:addTermAssociation"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addTermAssociationResponse" message="tns:addTermAssociationResponse"/>
</operation>
<operation name="updateTermAssociation">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateTermAssociationRequest" message="tns:updateTermAssociation"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateTermAssociationResponse" message="tns:updateTermAssociationResponse"/>
</operation>
<operation name="deleteTermAssociation">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteTermAssociationRequest" message="tns:deleteTermAssociation"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteTermAssociationResponse" message="tns:deleteTermAssociationResponse"/>
</operation>
<operation name="fetchTermHistory">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchTermHistoryRequest" message="tns:fetchTermHistory"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchTermHistoryResponse" message="tns:fetchTermHistoryResponse"/>
</operation>
<operation name="getNavChildContext">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavChildContextRequest" message="tns:getNavChildContext"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavChildContextResponse" message="tns:getNavChildContextResponse"/>
</operation>
<operation name="getSubsetNavChildContext">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetNavChildContextRequest" message="tns:getSubsetNavChildContext"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetNavChildContextResponse" message="tns:getSubsetNavChildContextResponse"/>
</operation>
<operation name="getAssociationNavChildContext">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAssociationNavChildContextRequest" message="tns:getAssociationNavChildContext"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAssociationNavChildContextResponse" message="tns:getAssociationNavChildContextResponse"/>
</operation>
<operation name="getNavParentContext">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavParentContextRequest" message="tns:getNavParentContext"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavParentContextResponse" message="tns:getNavParentContextResponse"/>
</operation>
<operation name="getSubsetNavParentContext">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetNavParentContextRequest" message="tns:getSubsetNavParentContext"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetNavParentContextResponse" message="tns:getSubsetNavParentContextResponse"/>
</operation>
<operation name="getAssociationNavParentContext">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAssociationNavParentContextRequest" message="tns:getAssociationNavParentContext"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAssociationNavParentContextResponse" message="tns:getAssociationNavParentContextResponse"/>
</operation>
<operation name="getConceptChildRoots">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptChildRootsRequest" message="tns:getConceptChildRoots"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getConceptChildRootsResponse" message="tns:getConceptChildRootsResponse"/>
</operation>
<operation name="getSubsetConceptChildRoots">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetConceptChildRootsRequest" message="tns:getSubsetConceptChildRoots"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetConceptChildRootsResponse" message="tns:getSubsetConceptChildRootsResponse"/>
</operation>
<operation name="getNavChildContextInNamespace">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavChildContextInNamespaceRequest" message="tns:getNavChildContextInNamespace"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavChildContextInNamespaceResponse" message="tns:getNavChildContextInNamespaceResponse"/>
</operation>
<operation name="getNavParentContextInNamespace">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavParentContextInNamespaceRequest" message="tns:getNavParentContextInNamespace"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getNavParentContextInNamespaceResponse" message="tns:getNavParentContextInNamespaceResponse"/>
</operation>
<operation name="filterSubsetConcepts">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/filterSubsetConceptsRequest" message="tns:filterSubsetConcepts"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/filterSubsetConceptsResponse" message="tns:filterSubsetConceptsResponse"/>
</operation>
<operation name="findConceptsWithNameMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithNameMatchingRequest" message="tns:findConceptsWithNameMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithNameMatchingResponse" message="tns:findConceptsWithNameMatchingResponse"/>
</operation>
<operation name="findConceptsWithAllSynonymMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithAllSynonymMatchingRequest" message="tns:findConceptsWithAllSynonymMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithAllSynonymMatchingResponse" message="tns:findConceptsWithAllSynonymMatchingResponse"/>
</operation>
<operation name="findConceptsWithPropertyMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithPropertyMatchingRequest" message="tns:findConceptsWithPropertyMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithPropertyMatchingResponse" message="tns:findConceptsWithPropertyMatchingResponse"/>
</operation>
<operation name="findConceptsWithPropertyQualifierMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithPropertyQualifierMatchingRequest" message="tns:findConceptsWithPropertyQualifierMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithPropertyQualifierMatchingResponse" message="tns:findConceptsWithPropertyQualifierMatchingResponse"/>
</operation>
<operation name="findConceptsWithConceptAssociationMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithConceptAssociationMatchingRequest" message="tns:findConceptsWithConceptAssociationMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithConceptAssociationMatchingResponse" message="tns:findConceptsWithConceptAssociationMatchingResponse"/>
</operation>
<operation name="findConceptsWithInverseConceptAssociationMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithInverseConceptAssociationMatchingRequest" message="tns:findConceptsWithInverseConceptAssociationMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithInverseConceptAssociationMatchingResponse" message="tns:findConceptsWithInverseConceptAssociationMatchingResponse"/>
</operation>
<operation name="findConceptsWithAssociationQualifierMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithAssociationQualifierMatchingRequest" message="tns:findConceptsWithAssociationQualifierMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithAssociationQualifierMatchingResponse" message="tns:findConceptsWithAssociationQualifierMatchingResponse"/>
</operation>
<operation name="findConceptsWithSynonymMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithSynonymMatchingRequest" message="tns:findConceptsWithSynonymMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithSynonymMatchingResponse" message="tns:findConceptsWithSynonymMatchingResponse"/>
</operation>
<operation name="findConceptsWithRoleMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithRoleMatchingRequest" message="tns:findConceptsWithRoleMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithRoleMatchingResponse" message="tns:findConceptsWithRoleMatchingResponse"/>
</operation>
<operation name="findConceptsWithInverseRoleMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithInverseRoleMatchingRequest" message="tns:findConceptsWithInverseRoleMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findConceptsWithInverseRoleMatchingResponse" message="tns:findConceptsWithInverseRoleMatchingResponse"/>
</operation>
<operation name="findTermsWithNameMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithNameMatchingRequest" message="tns:findTermsWithNameMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithNameMatchingResponse" message="tns:findTermsWithNameMatchingResponse"/>
</operation>
<operation name="findTermsWithPropertyMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithPropertyMatchingRequest" message="tns:findTermsWithPropertyMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithPropertyMatchingResponse" message="tns:findTermsWithPropertyMatchingResponse"/>
</operation>
<operation name="findTermsWithPropertyQualifierMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithPropertyQualifierMatchingRequest" message="tns:findTermsWithPropertyQualifierMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithPropertyQualifierMatchingResponse" message="tns:findTermsWithPropertyQualifierMatchingResponse"/>
</operation>
<operation name="findTermsWithTermAssociationMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithTermAssociationMatchingRequest" message="tns:findTermsWithTermAssociationMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithTermAssociationMatchingResponse" message="tns:findTermsWithTermAssociationMatchingResponse"/>
</operation>
<operation name="findTermsWithInverseTermAssociationMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithInverseTermAssociationMatchingRequest" message="tns:findTermsWithInverseTermAssociationMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithInverseTermAssociationMatchingResponse" message="tns:findTermsWithInverseTermAssociationMatchingResponse"/>
</operation>
<operation name="findTermsWithAssociationQualifierMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithAssociationQualifierMatchingRequest" message="tns:findTermsWithAssociationQualifierMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithAssociationQualifierMatchingResponse" message="tns:findTermsWithAssociationQualifierMatchingResponse"/>
</operation>
<operation name="findTermsWithInverseSynonymMatching">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithInverseSynonymMatchingRequest" message="tns:findTermsWithInverseSynonymMatching"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findTermsWithInverseSynonymMatchingResponse" message="tns:findTermsWithInverseSynonymMatchingResponse"/>
</operation>
<operation name="addNamespace">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addNamespaceRequest" message="tns:addNamespace"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addNamespaceResponse" message="tns:addNamespaceResponse"/>
</operation>
<operation name="deleteNamespaceByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespaceByNameRequest" message="tns:deleteNamespaceByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespaceByNameResponse" message="tns:deleteNamespaceByNameResponse"/>
</operation>
<operation name="deleteNamespaceById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespaceByIdRequest" message="tns:deleteNamespaceById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespaceByIdResponse" message="tns:deleteNamespaceByIdResponse"/>
</operation>
<operation name="updateNamespace">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateNamespaceRequest" message="tns:updateNamespace"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateNamespaceResponse" message="tns:updateNamespaceResponse"/>
</operation>
<operation name="addNamespaceProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addNamespacePropertyRequest" message="tns:addNamespaceProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addNamespacePropertyResponse" message="tns:addNamespacePropertyResponse"/>
</operation>
<operation name="updateNamespaceProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateNamespacePropertyRequest" message="tns:updateNamespaceProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateNamespacePropertyResponse" message="tns:updateNamespacePropertyResponse"/>
</operation>
<operation name="deleteNamespaceProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespacePropertyRequest" message="tns:deleteNamespaceProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteNamespacePropertyResponse" message="tns:deleteNamespacePropertyResponse"/>
</operation>
<operation name="addVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addVersionRequest" message="tns:addVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addVersionResponse" message="tns:addVersionResponse"/>
</operation>
<operation name="updateVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateVersionRequest" message="tns:updateVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateVersionResponse" message="tns:updateVersionResponse"/>
</operation>
<operation name="deleteVersionById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteVersionByIdRequest" message="tns:deleteVersionById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteVersionByIdResponse" message="tns:deleteVersionByIdResponse"/>
</operation>
<operation name="deleteVersionByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteVersionByNameRequest" message="tns:deleteVersionByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteVersionByNameResponse" message="tns:deleteVersionByNameResponse"/>
</operation>
<operation name="addVersionProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addVersionPropertyRequest" message="tns:addVersionProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addVersionPropertyResponse" message="tns:addVersionPropertyResponse"/>
</operation>
<operation name="updateVersionProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateVersionPropertyRequest" message="tns:updateVersionProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateVersionPropertyResponse" message="tns:updateVersionPropertyResponse"/>
</operation>
<operation name="deleteVersionProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteVersionPropertyRequest" message="tns:deleteVersionProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteVersionPropertyResponse" message="tns:deleteVersionPropertyResponse"/>
</operation>
<operation name="isWorkingVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isWorkingVersionRequest" message="tns:isWorkingVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isWorkingVersionResponse" message="tns:isWorkingVersionResponse"/>
</operation>
<operation name="addConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addConceptRequest" message="tns:addConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addConceptResponse" message="tns:addConceptResponse"/>
</operation>
<operation name="updateConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateConceptRequest" message="tns:updateConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateConceptResponse" message="tns:updateConceptResponse"/>
</operation>
<operation name="deleteConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteConceptRequest" message="tns:deleteConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteConceptResponse" message="tns:deleteConceptResponse"/>
</operation>
<operation name="generateNextConceptId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateNextConceptIdRequest" message="tns:generateNextConceptId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateNextConceptIdResponse" message="tns:generateNextConceptIdResponse"/>
</operation>
<operation name="addConceptProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addConceptPropertyRequest" message="tns:addConceptProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addConceptPropertyResponse" message="tns:addConceptPropertyResponse"/>
</operation>
<operation name="deleteConceptProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteConceptPropertyRequest" message="tns:deleteConceptProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteConceptPropertyResponse" message="tns:deleteConceptPropertyResponse"/>
</operation>
<operation name="updateConceptProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateConceptPropertyRequest" message="tns:updateConceptProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateConceptPropertyResponse" message="tns:updateConceptPropertyResponse"/>
</operation>
<operation name="addSynonym">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSynonymRequest" message="tns:addSynonym"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSynonymResponse" message="tns:addSynonymResponse"/>
</operation>
<operation name="deleteSynonym">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSynonymRequest" message="tns:deleteSynonym"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSynonymResponse" message="tns:deleteSynonymResponse"/>
</operation>
<operation name="updateSynonym">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSynonymRequest" message="tns:updateSynonym"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSynonymResponse" message="tns:updateSynonymResponse"/>
</operation>
<operation name="addConceptAssociation">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addConceptAssociationRequest" message="tns:addConceptAssociation"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addConceptAssociationResponse" message="tns:addConceptAssociationResponse"/>
</operation>
<operation name="updateConceptAssociation">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateConceptAssociationRequest" message="tns:updateConceptAssociation"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateConceptAssociationResponse" message="tns:updateConceptAssociationResponse"/>
</operation>
<operation name="deleteConceptAssociation">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteConceptAssociationRequest" message="tns:deleteConceptAssociation"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteConceptAssociationResponse" message="tns:deleteConceptAssociationResponse"/>
</operation>
<operation name="getAllKinds">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllKindsRequest" message="tns:getAllKinds"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllKindsResponse" message="tns:getAllKindsResponse"/>
</operation>
<operation name="getKinds">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getKindsRequest" message="tns:getKinds"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getKindsResponse" message="tns:getKindsResponse"/>
</operation>
<operation name="getAllRoleTypes">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllRoleTypesRequest" message="tns:getAllRoleTypes"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllRoleTypesResponse" message="tns:getAllRoleTypesResponse"/>
</operation>
<operation name="findRoleTypeByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findRoleTypeByNameRequest" message="tns:findRoleTypeByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findRoleTypeByNameResponse" message="tns:findRoleTypeByNameResponse"/>
</operation>
<operation name="findRoleTypeById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findRoleTypeByIdRequest" message="tns:findRoleTypeById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findRoleTypeByIdResponse" message="tns:findRoleTypeByIdResponse"/>
</operation>
<operation name="findRoleTypeByCode">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findRoleTypeByCodeRequest" message="tns:findRoleTypeByCode"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findRoleTypeByCodeResponse" message="tns:findRoleTypeByCodeResponse"/>
</operation>
<operation name="addRoleType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addRoleTypeRequest" message="tns:addRoleType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addRoleTypeResponse" message="tns:addRoleTypeResponse"/>
</operation>
<operation name="updateRoleType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateRoleTypeRequest" message="tns:updateRoleType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateRoleTypeResponse" message="tns:updateRoleTypeResponse"/>
</operation>
<operation name="deleteRoleType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteRoleTypeRequest" message="tns:deleteRoleType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteRoleTypeResponse" message="tns:deleteRoleTypeResponse"/>
</operation>
<operation name="deleteRoleTypeWithReferences">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteRoleTypeWithReferencesRequest" message="tns:deleteRoleTypeWithReferences"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteRoleTypeWithReferencesResponse" message="tns:deleteRoleTypeWithReferencesResponse"/>
</operation>
<operation name="isRoleTypeUsed">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isRoleTypeUsedRequest" message="tns:isRoleTypeUsed"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isRoleTypeUsedResponse" message="tns:isRoleTypeUsedResponse"/>
</operation>
<operation name="fetchRightIdentityReferences">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchRightIdentityReferencesRequest" message="tns:fetchRightIdentityReferences"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchRightIdentityReferencesResponse" message="tns:fetchRightIdentityReferencesResponse"/>
</operation>
<operation name="fetchParentReferences">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchParentReferencesRequest" message="tns:fetchParentReferences"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchParentReferencesResponse" message="tns:fetchParentReferencesResponse"/>
</operation>
<operation name="updatePrimitive">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updatePrimitiveRequest" message="tns:updatePrimitive"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updatePrimitiveResponse" message="tns:updatePrimitiveResponse"/>
</operation>
<operation name="addDefiningConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addDefiningConceptRequest" message="tns:addDefiningConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addDefiningConceptResponse" message="tns:addDefiningConceptResponse"/>
</operation>
<operation name="deleteDefiningConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteDefiningConceptRequest" message="tns:deleteDefiningConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteDefiningConceptResponse" message="tns:deleteDefiningConceptResponse"/>
</operation>
<operation name="updateDefiningConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateDefiningConceptRequest" message="tns:updateDefiningConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateDefiningConceptResponse" message="tns:updateDefiningConceptResponse"/>
</operation>
<operation name="addDefiningRole">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addDefiningRoleRequest" message="tns:addDefiningRole"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addDefiningRoleResponse" message="tns:addDefiningRoleResponse"/>
</operation>
<operation name="deleteDefiningRole">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteDefiningRoleRequest" message="tns:deleteDefiningRole"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteDefiningRoleResponse" message="tns:deleteDefiningRoleResponse"/>
</operation>
<operation name="updateDefiningRole">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateDefiningRoleRequest" message="tns:updateDefiningRole"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateDefiningRoleResponse" message="tns:updateDefiningRoleResponse"/>
</operation>
<operation name="createRoleGroup">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/createRoleGroupRequest" message="tns:createRoleGroup"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/createRoleGroupResponse" message="tns:createRoleGroupResponse"/>
</operation>
<operation name="ungroupRoleGroup">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/ungroupRoleGroupRequest" message="tns:ungroupRoleGroup"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/ungroupRoleGroupResponse" message="tns:ungroupRoleGroupResponse"/>
</operation>
<operation name="isSubConcept">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptRequest" message="tns:isSubConcept"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptResponse" message="tns:isSubConceptResponse"/>
</operation>
<operation name="isSubConceptOfConcepts">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptOfConceptsRequest" message="tns:isSubConceptOfConcepts"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptOfConceptsResponse" message="tns:isSubConceptOfConceptsResponse"/>
</operation>
<operation name="isSubConceptByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptByNameRequest" message="tns:isSubConceptByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptByNameResponse" message="tns:isSubConceptByNameResponse"/>
</operation>
<operation name="isSubConceptById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptByIdRequest" message="tns:isSubConceptById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptByIdResponse" message="tns:isSubConceptByIdResponse"/>
</operation>
<operation name="isSubConceptByCode">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptByCodeRequest" message="tns:isSubConceptByCode"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptByCodeResponse" message="tns:isSubConceptByCodeResponse"/>
</operation>
<operation name="isSubConceptOfConceptsByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptOfConceptsByNameRequest" message="tns:isSubConceptOfConceptsByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/isSubConceptOfConceptsByNameResponse" message="tns:isSubConceptOfConceptsByNameResponse"/>
</operation>
<operation name="getSubConcepts">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubConceptsRequest" message="tns:getSubConcepts"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubConceptsResponse" message="tns:getSubConceptsResponse"/>
</operation>
<operation name="getClassifyDetail">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getClassifyDetailRequest" message="tns:getClassifyDetail"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getClassifyDetailResponse" message="tns:getClassifyDetailResponse"/>
</operation>
<operation name="findAllSubsets">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAllSubsetsRequest" message="tns:findAllSubsets"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findAllSubsetsResponse" message="tns:findAllSubsetsResponse"/>
</operation>
<operation name="findSubset">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetRequest" message="tns:findSubset"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetResponse" message="tns:findSubsetResponse"/>
</operation>
<operation name="findSubsetById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetByIdRequest" message="tns:findSubsetById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetByIdResponse" message="tns:findSubsetByIdResponse"/>
</operation>
<operation name="findSubsetByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetByNameRequest" message="tns:findSubsetByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetByNameResponse" message="tns:findSubsetByNameResponse"/>
</operation>
<operation name="fetchConceptSubsets">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchConceptSubsetsRequest" message="tns:fetchConceptSubsets"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchConceptSubsetsResponse" message="tns:fetchConceptSubsetsResponse"/>
</operation>
<operation name="addSubset">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetRequest" message="tns:addSubset"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetResponse" message="tns:addSubsetResponse"/>
</operation>
<operation name="fetchSubsetPreview">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetPreviewRequest" message="tns:fetchSubsetPreview"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetPreviewResponse" message="tns:fetchSubsetPreviewResponse"/>
</operation>
<operation name="saveSubsetExpression">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/saveSubsetExpressionRequest" message="tns:saveSubsetExpression"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/saveSubsetExpressionResponse" message="tns:saveSubsetExpressionResponse"/>
</operation>
<operation name="buildSubset">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/buildSubsetRequest" message="tns:buildSubset"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/buildSubsetResponse" message="tns:buildSubsetResponse"/>
</operation>
<operation name="updateSubset">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetRequest" message="tns:updateSubset"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetResponse" message="tns:updateSubsetResponse"/>
</operation>
<operation name="deleteSubset">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetRequest" message="tns:deleteSubset"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetResponse" message="tns:deleteSubsetResponse"/>
</operation>
<operation name="fetchSubsetConcepts">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetConceptsRequest" message="tns:fetchSubsetConcepts"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetConceptsResponse" message="tns:fetchSubsetConceptsResponse"/>
</operation>
<operation name="fetchSubsetConceptCount">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetConceptCountRequest" message="tns:fetchSubsetConceptCount"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetConceptCountResponse" message="tns:fetchSubsetConceptCountResponse"/>
</operation>
<operation name="fetchSubsetNamespaces">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetNamespacesRequest" message="tns:fetchSubsetNamespaces"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/fetchSubsetNamespacesResponse" message="tns:fetchSubsetNamespacesResponse"/>
</operation>
<operation name="addSubsetProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetPropertyRequest" message="tns:addSubsetProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetPropertyResponse" message="tns:addSubsetPropertyResponse"/>
</operation>
<operation name="updateSubsetProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetPropertyRequest" message="tns:updateSubsetProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetPropertyResponse" message="tns:updateSubsetPropertyResponse"/>
</operation>
<operation name="deleteSubsetProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetPropertyRequest" message="tns:deleteSubsetProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetPropertyResponse" message="tns:deleteSubsetPropertyResponse"/>
</operation>
<operation name="getSubsetVersions">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionsRequest" message="tns:getSubsetVersions"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionsResponse" message="tns:getSubsetVersionsResponse"/>
</operation>
<operation name="getSubsetVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionRequest" message="tns:getSubsetVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionResponse" message="tns:getSubsetVersionResponse"/>
</operation>
<operation name="getSubsetVersionByTime">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionByTimeRequest" message="tns:getSubsetVersionByTime"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSubsetVersionByTimeResponse" message="tns:getSubsetVersionByTimeResponse"/>
</operation>
<operation name="findSubsetVersionByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetVersionByNameRequest" message="tns:findSubsetVersionByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetVersionByNameResponse" message="tns:findSubsetVersionByNameResponse"/>
</operation>
<operation name="findSubsetVersionById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetVersionByIdRequest" message="tns:findSubsetVersionById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/findSubsetVersionByIdResponse" message="tns:findSubsetVersionByIdResponse"/>
</operation>
<operation name="addSubsetVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetVersionRequest" message="tns:addSubsetVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetVersionResponse" message="tns:addSubsetVersionResponse"/>
</operation>
<operation name="updateSubsetVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetVersionRequest" message="tns:updateSubsetVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetVersionResponse" message="tns:updateSubsetVersionResponse"/>
</operation>
<operation name="deleteSubsetVersionById">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetVersionByIdRequest" message="tns:deleteSubsetVersionById"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetVersionByIdResponse" message="tns:deleteSubsetVersionByIdResponse"/>
</operation>
<operation name="deleteSubsetVersionByName">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetVersionByNameRequest" message="tns:deleteSubsetVersionByName"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetVersionByNameResponse" message="tns:deleteSubsetVersionByNameResponse"/>
</operation>
<operation name="addSubsetVersionProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetVersionPropertyRequest" message="tns:addSubsetVersionProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/addSubsetVersionPropertyResponse" message="tns:addSubsetVersionPropertyResponse"/>
</operation>
<operation name="updateSubsetVersionProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetVersionPropertyRequest" message="tns:updateSubsetVersionProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/updateSubsetVersionPropertyResponse" message="tns:updateSubsetVersionPropertyResponse"/>
</operation>
<operation name="deleteSubsetVersionProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetVersionPropertyRequest" message="tns:deleteSubsetVersionProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSubsetVersionPropertyResponse" message="tns:deleteSubsetVersionPropertyResponse"/>
</operation>
<operation name="ping">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/pingRequest" message="tns:ping"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/pingResponse" message="tns:pingResponse"/>
</operation>
<operation name="getServerVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getServerVersionRequest" message="tns:getServerVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getServerVersionResponse" message="tns:getServerVersionResponse"/>
</operation>
<operation name="getServerDatabaseType">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getServerDatabaseTypeRequest" message="tns:getServerDatabaseType"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getServerDatabaseTypeResponse" message="tns:getServerDatabaseTypeResponse"/>
</operation>
<operation name="getSchemaVersion">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSchemaVersionRequest" message="tns:getSchemaVersion"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSchemaVersionResponse" message="tns:getSchemaVersionResponse"/>
</operation>
<operation name="getLicense">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getLicenseRequest" message="tns:getLicense"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getLicenseResponse" message="tns:getLicenseResponse"/>
</operation>
<operation name="getAllLicenses">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllLicensesRequest" message="tns:getAllLicenses"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getAllLicensesResponse" message="tns:getAllLicensesResponse"/>
</operation>
<operation name="executeSQL">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLRequest" message="tns:executeSQL"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLResponse" message="tns:executeSQLResponse"/>
</operation>
<operation name="executeSQLQuery">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLQueryRequest" message="tns:executeSQLQuery"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLQueryResponse" message="tns:executeSQLQueryResponse"/>
</operation>
<operation name="executeSQLUpdate">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLUpdateRequest" message="tns:executeSQLUpdate"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLUpdateResponse" message="tns:executeSQLUpdateResponse"/>
</operation>
<operation name="executeSQLUpdates">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLUpdatesRequest" message="tns:executeSQLUpdates"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeSQLUpdatesResponse" message="tns:executeSQLUpdatesResponse"/>
</operation>
<operation name="executeBatchSQLUpdate">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeBatchSQLUpdateRequest" message="tns:executeBatchSQLUpdate"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/executeBatchSQLUpdateResponse" message="tns:executeBatchSQLUpdateResponse"/>
</operation>
<operation name="getUserContextProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getUserContextPropertyRequest" message="tns:getUserContextProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getUserContextPropertyResponse" message="tns:getUserContextPropertyResponse"/>
</operation>
<operation name="getUserContextPropertyKeys">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getUserContextPropertyKeysRequest" message="tns:getUserContextPropertyKeys"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getUserContextPropertyKeysResponse" message="tns:getUserContextPropertyKeysResponse"/>
</operation>
<operation name="saveUserContextProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/saveUserContextPropertyRequest" message="tns:saveUserContextProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/saveUserContextPropertyResponse" message="tns:saveUserContextPropertyResponse"/>
</operation>
<operation name="deleteUserContextProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteUserContextPropertyRequest" message="tns:deleteUserContextProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteUserContextPropertyResponse" message="tns:deleteUserContextPropertyResponse"/>
</operation>
<operation name="getSystemContextPropertyKeys">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSystemContextPropertyKeysRequest" message="tns:getSystemContextPropertyKeys"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/getSystemContextPropertyKeysResponse" message="tns:getSystemContextPropertyKeysResponse"/>
</operation>
<operation name="deleteSystemContextProperty">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSystemContextPropertyRequest" message="tns:deleteSystemContextProperty"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/deleteSystemContextPropertyResponse" message="tns:deleteSystemContextPropertyResponse"/>
</operation>
<operation name="hasAuthorityPermission">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasAuthorityPermissionRequest" message="tns:hasAuthorityPermission"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasAuthorityPermissionResponse" message="tns:hasAuthorityPermissionResponse"/>
</operation>
<operation name="hasNamespacePermission">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasNamespacePermissionRequest" message="tns:hasNamespacePermission"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasNamespacePermissionResponse" message="tns:hasNamespacePermissionResponse"/>
</operation>
<operation name="hasSubsetPermission">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasSubsetPermissionRequest" message="tns:hasSubsetPermission"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasSubsetPermissionResponse" message="tns:hasSubsetPermissionResponse"/>
</operation>
<operation name="generateSubsetItemId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateSubsetItemIdRequest" message="tns:generateSubsetItemId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateSubsetItemIdResponse" message="tns:generateSubsetItemIdResponse"/>
</operation>
<operation name="generateAuthorityItemId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateAuthorityItemIdRequest" message="tns:generateAuthorityItemId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/generateAuthorityItemIdResponse" message="tns:generateAuthorityItemIdResponse"/>
</operation>
<operation name="syncSubsetItemId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/syncSubsetItemIdRequest" message="tns:syncSubsetItemId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/syncSubsetItemIdResponse" message="tns:syncSubsetItemIdResponse"/>
</operation>
<operation name="syncAuthorityItemId">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/syncAuthorityItemIdRequest" message="tns:syncAuthorityItemId"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/syncAuthorityItemIdResponse" message="tns:syncAuthorityItemIdResponse"/>
</operation>
<operation name="hasAdminPermission">
<input wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasAdminPermissionRequest" message="tns:hasAdminPermission"/>
<output wsam:Action="http://apelon.com/dtsserver/ws/dtsquery/DtsQueryDaoWS/hasAdminPermissionResponse" message="tns:hasAdminPermissionResponse"/>
</operation>
</portType>
<binding name="DtsQueryDaoPortBinding" type="tns:DtsQueryDaoWS">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="getVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getClassifierStatus">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getClassifierHistory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchConceptHistory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getRoleTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAssociationTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSynonymTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="classify">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchAuthorityByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchAuthorityById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAllPropertyTypesOfAuthority">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAuthorities">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateAuthority">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteAuthorityByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteAuthorityById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addAuthorityProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateAuthorityProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteAuthorityProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findNamespaceByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findNamespaceById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findNamespaceByCode">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getVersionByTime">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchVersionByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchVersionById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getExtendingNamespaces">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteNamespaceByCode">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addRootConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteRootConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getConceptAssociationTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getTermAssociationTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAssociationTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAssociationTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isAssociationTypeUsed">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addAssociationType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateAssociationType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteAssociationType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getConceptPropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getTermPropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNamespacePropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getVersionPropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetPropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetVersionPropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAuthorityPropertyTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findPropertyTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findPropertyTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetPropertyTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetPropertyTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAuthorityPropertyTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAuthorityPropertyTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isPropertyTypeUsed">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addPropertyType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deletePropertyType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updatePropertyType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAllNamespaceQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getConceptPropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getTermPropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNamespacePropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getVersionPropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findQualifierTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findQualifierTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAllSubsetQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetPropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetVersionPropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetQualifierTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetQualifierTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAuthorityPropertyQualifierTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAuthorityQualifierTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAuthorityQualifierTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isQualifierTypeUsed">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addQualifierType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteQualifierType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateQualifierType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptByCode">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermByCode">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addTerm">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteTerm">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateTerm">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="generateNextTermId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addTermProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteTermProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateTermProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="generateNamespaceItemId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="createNamespaceRevision">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addAuthority">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="syncNamespaceItemId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="createSubsetRevision">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSystemContextProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="saveSystemContextProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getVersions">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNamespaces">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchTermProperties">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addTermAssociation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateTermAssociation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteTermAssociation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchTermHistory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNavChildContext">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetNavChildContext">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAssociationNavChildContext">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNavParentContext">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetNavParentContext">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAssociationNavParentContext">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getConceptChildRoots">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetConceptChildRoots">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNavChildContextInNamespace">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getNavParentContextInNamespace">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="filterSubsetConcepts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithNameMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithAllSynonymMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithPropertyMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithPropertyQualifierMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithConceptAssociationMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithInverseConceptAssociationMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithAssociationQualifierMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithSynonymMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithRoleMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findConceptsWithInverseRoleMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithNameMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithPropertyMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithPropertyQualifierMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithTermAssociationMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithInverseTermAssociationMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithAssociationQualifierMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findTermsWithInverseSynonymMatching">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addNamespace">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteNamespaceByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteNamespaceById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateNamespace">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addNamespaceProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateNamespaceProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteNamespaceProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteVersionById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteVersionByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addVersionProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateVersionProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteVersionProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isWorkingVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="generateNextConceptId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addConceptProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteConceptProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateConceptProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addSynonym">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSynonym">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateSynonym">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addConceptAssociation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateConceptAssociation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteConceptAssociation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAllKinds">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getKinds">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAllRoleTypes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findRoleTypeByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findRoleTypeById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findRoleTypeByCode">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addRoleType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateRoleType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteRoleType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteRoleTypeWithReferences">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isRoleTypeUsed">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchRightIdentityReferences">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchParentReferences">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updatePrimitive">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addDefiningConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteDefiningConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateDefiningConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addDefiningRole">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteDefiningRole">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateDefiningRole">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="createRoleGroup">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="ungroupRoleGroup">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isSubConcept">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isSubConceptOfConcepts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isSubConceptByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isSubConceptById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isSubConceptByCode">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="isSubConceptOfConceptsByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubConcepts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getClassifyDetail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findAllSubsets">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubset">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchConceptSubsets">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addSubset">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchSubsetPreview">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="saveSubsetExpression">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="buildSubset">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateSubset">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSubset">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchSubsetConcepts">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchSubsetConceptCount">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="fetchSubsetNamespaces">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addSubsetProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateSubsetProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSubsetProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetVersions">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSubsetVersionByTime">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetVersionByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="findSubsetVersionById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addSubsetVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateSubsetVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSubsetVersionById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSubsetVersionByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addSubsetVersionProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="updateSubsetVersionProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSubsetVersionProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="ping">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getServerVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getServerDatabaseType">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSchemaVersion">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getLicense">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getAllLicenses">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="executeSQL">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="executeSQLQuery">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="executeSQLUpdate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="executeSQLUpdates">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="executeBatchSQLUpdate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getUserContextProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getUserContextPropertyKeys">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="saveUserContextProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteUserContextProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="getSystemContextPropertyKeys">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="deleteSystemContextProperty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="hasAuthorityPermission">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="hasNamespacePermission">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="hasSubsetPermission">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="generateSubsetItemId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="generateAuthorityItemId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="syncSubsetItemId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="syncAuthorityItemId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="hasAdminPermission">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
</binding>
<service name="DtsQueryDaoService">
<port name="DtsQueryDaoPort" binding="tns:DtsQueryDaoPortBinding">
<soap:address location="http://localhost:5000/soap/DtsQueryDaoWS"/>
</port>
</service>
</definitions>
